{"version":3,"file":"react-reactive-form.umd.js","sources":["../src/observable.js","../src/utils.js","../src/validators.js","../src/model.js","../src/formBuilder.js","../src/Field.js","../src/configureControl.js","../src/FieldGroup.js","../src/FieldControl.js","../src/FieldArray.js","../src/FormGenerator.js","../src/reactiveForm.js"],"sourcesContent":["export default class Observable {\n  constructor() {\n    this.observers = []\n  }\n  subscribe(fn) {\n    this.observers.push(fn)\n  }\n  unsubscribe(fn) {\n    if (fn) {\n      this.observers = this.observers.filter(item => {\n        if (item !== fn) {\n          return item\n        }\n        return null\n      })\n    } else {\n      this.observers = []\n    }\n  }\n  next(o, thisObj) {\n    var scope = thisObj || window\n    this.observers.forEach(function(item) {\n      item.call(scope, o)\n    })\n  }\n}\n","import Observable from './observable'\n\n/** Converts a promise into Observable\n * @param {Promise} r\n * @param {(value: any) => any} cb\n * @returns {Observable}\n */\nexport function fromPromise(r, cb) {\n  const observable = new Observable()\n  r\n    .then(\n      value => {\n        const mappedValue = value => (cb ? cb(value) : value)\n        observable.next(mappedValue(value))\n      },\n      error => {\n        observable.next(error)\n      }\n    )\n    .then(null, error => {\n      throw error\n    })\n  return observable\n}\n/**\n * Checks if an object is a Promise\n * @param {Observable} obj\n * @returns {boolean}\n */\nexport function isPromise(obj) {\n  return !!obj && typeof obj.then === 'function'\n}\n/**\n * Checks if an object is a Function\n * @param {any} obj\n * @returns {boolean}\n */\nexport function isFunction(obj) {\n  return 'function' === typeof obj\n}\n/**\n * Checks if an object is Observable\n * @param {Observable} obj\n * @returns {boolean}\n */\nexport function isObservable(obj) {\n  return !!obj && typeof obj.subscribe === 'function'\n}\n/**\n * Converts an object into Observable\n * @param {any} r\n * @returns {Observable}\n */\nexport function toObservable(r) {\n  const obs = isPromise(r) ? fromPromise(r) : r\n  if (!isObservable(obs)) {\n    throw new Error('Expected validator to return Promise or Observable.')\n  }\n  return obs\n}\nexport const isReactNative = () =>\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.product &&\n  window.navigator.product === 'ReactNative'\nexport const isEvent = candidate =>\n  !!(candidate && candidate.stopPropagation && candidate.preventDefault)\n\n// Common props\nexport const propsToBeMap = {\n  value: 'value',\n  touched: 'touched',\n  untouched: 'untouched',\n  disabled: 'disabled',\n  enabled: 'enabled',\n  invalid: 'invalid',\n  valid: 'valid',\n  pristine: 'pristine',\n  dirty: 'dirty',\n  errors: 'errors',\n  hasError: 'hasError',\n  getError: 'getError',\n  status: 'status',\n  pending: 'pending',\n  pendingValue: '_pendingValue'\n}\nexport const controlsToBeMap = {\n  ReactNative: {\n    switch: {\n      value: 'value',\n      onValueChange: 'onChange',\n      onBlur: 'onBlur',\n      onFocus: 'onFocus',\n      disabled: 'disabled'\n    },\n    default: {\n      value: 'value',\n      onChange: 'onChange',\n      onBlur: 'onBlur',\n      onFocus: 'onFocus',\n      editable: 'enabled'\n    }\n  },\n  default: {\n    value: 'value',\n    onChange: 'onChange',\n    onBlur: 'onBlur',\n    onFocus: 'onFocus',\n    disabled: 'disabled'\n  }\n}\nexport const getAbsoluteValue = value =>\n  value === undefined || value === null ? '' : value\n\nexport const getInputControls = inputType =>\n  isReactNative()\n    ? controlsToBeMap.ReactNative[inputType] ||\n      controlsToBeMap.ReactNative.default\n    : controlsToBeMap.default\n\nexport function getHandler(inputType, value, control) {\n  const controlObject = {}\n  const inputControls = getInputControls(inputType)\n  Object.keys(inputControls).forEach(key => {\n    let controlProperty = null\n    if (key === 'value') {\n      if (control.updateOn !== 'change') {\n        controlProperty = getAbsoluteValue(control._pendingValue)\n      } else {\n        controlProperty = getAbsoluteValue(control.value)\n      }\n    } else {\n      controlProperty = control[inputControls[key]]\n    }\n    controlObject[key] = controlProperty\n  })\n  const mappedObject = controlObject\n  switch (inputType) {\n    case 'checkbox':\n      mappedObject['checked'] = !!mappedObject.value\n      mappedObject['type'] = inputType\n      break\n    case 'radio':\n      mappedObject['checked'] = mappedObject.value === value\n      mappedObject.value = value\n      mappedObject['type'] = inputType\n      break\n    default:\n  }\n  return mappedObject\n}\n/**\n * Display warning messages\n * @param {condition} any\n * @param {message} string\n * @returns {void}\n */\nexport function warning(condition, message) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!condition) {\n      console.error(`Warning: ${message}`)\n    }\n  }\n}\n/**\n * Generates the unique key for react elements\n * @param {*} pre\n */\nexport const generateKey = pre => {\n  return `${pre}_${new Date().getTime()}`\n}\n\nexport const FIELD_PROPS = [\n  'strict',\n  'render',\n  'name',\n  'index',\n  'control',\n  'formState',\n  'options',\n  'parent',\n  'meta'\n]\n\nexport const mapConfigToFieldProps = config => {\n  const props = {}\n  if (config) {\n    Object.keys(config).forEach(configKey => {\n      if (FIELD_PROPS.indexOf(configKey) > -1) {\n        props[configKey] = config[configKey]\n      }\n    })\n  }\n  return props\n}\n","import { fromPromise } from './utils'\n\nfunction isEmptyInputValue(value) {\n  return value == null || value.length === 0\n}\nfunction isPresent(o) {\n  return o != null\n}\nfunction _mergeErrors(arrayOfErrors) {\n  const res = arrayOfErrors.reduce((res, errors) => {\n    return errors != null ? Object.assign({}, res, errors) : res\n  }, {})\n  return Object.keys(res).length === 0 ? null : res\n}\nfunction _executeValidators(control, validators) {\n  return validators.map(v => v(control))\n}\nfunction _executeAsyncValidators(control, validators) {\n  return validators.map(v => v(control))\n}\n\nconst EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport default class Validators {\n  /**\n   * Validator that requires controls to have a value greater than a number.\n   */\n  static min(min) {\n    return control => {\n      if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n        return null // don't validate empty values to allow optional controls\n      }\n      const parsedValue = parseFloat(control.value)\n      return !isNaN(parsedValue) && parsedValue < min\n        ? { min: { min, actual: parsedValue } }\n        : null\n    }\n  }\n\n  /**\n   * Validator that requires controls to have a value less than a number.\n   */\n  static max(max) {\n    return control => {\n      if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n        return null // don't validate empty values to allow optional controls\n      }\n      const parsedValue = parseFloat(control.value)\n      return !isNaN(parsedValue) && parsedValue > max\n        ? { max: { max, actual: parsedValue } }\n        : null\n    }\n  }\n\n  /**\n   * Validator that requires controls to have a non-empty value.\n   */\n  static required(control) {\n    return isEmptyInputValue(control.value) ? { required: true } : null\n  }\n\n  /**\n   * Validator that requires control value to be true.\n   */\n  static requiredTrue(control) {\n    return control.value === true ? null : { required: true }\n  }\n\n  /**\n   * Validator that performs email validation.\n   */\n  static email(control) {\n    if (isEmptyInputValue(control.value)) {\n      return null\n    }\n    return EMAIL_REGEXP.test(control.value) ? null : { email: true }\n  }\n\n  /**\n   * Validator that requires controls to have a value of a minimum length.\n   */\n  static minLength(minLength) {\n    return control => {\n      if (isEmptyInputValue(control.value)) {\n        return null // don't validate empty values to allow optional controls\n      }\n      const length = control.value ? control.value.length : 0\n      return length < minLength\n        ? { minLength: { requiredLength: minLength, actualLength: length } }\n        : null\n    }\n  }\n\n  /**\n   * Validator that requires controls to have a value of a maximum length.\n   */\n  static maxLength(maxLength) {\n    return control => {\n      const length = control.value ? control.value.length : 0\n      return length > maxLength\n        ? { maxLength: { requiredLength: maxLength, actualLength: length } }\n        : null\n    }\n  }\n  /**\n   * Validator that requires a control to match a regex to its value.\n   */\n  static pattern(pattern) {\n    if (!pattern) return null\n    let regex\n    let regexStr\n    if (typeof pattern === 'string') {\n      regexStr = `^${pattern}$`\n      regex = new RegExp(regexStr)\n    } else {\n      regexStr = pattern.toString()\n      regex = pattern\n    }\n    return control => {\n      if (isEmptyInputValue(control.value)) {\n        return null // don't validate empty values to allow optional controls\n      }\n      return regex.test(control.value)\n        ? null\n        : { pattern: { requiredPattern: regexStr, actualValue: control.value } }\n    }\n  }\n  /**\n   * Compose multiple validators into a single function that returns the union\n   * of the individual error maps.\n   * @param {(Function|null|undefined)[]|null} validators\n   * @return {Function|null}\n   */\n  static compose(validators) {\n    if (!validators) return null\n    const presentValidators = validators.filter(isPresent)\n    if (presentValidators.length === 0) return null\n    return control =>\n      _mergeErrors(_executeValidators(control, presentValidators))\n  }\n  /**\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error maps.\n   * @param {(Function|null|undefined)[]|null} validators\n   * @return {Function|null}\n   */\n  static composeAsync(validators) {\n    if (!validators) return null\n    const presentValidators = validators.filter(isPresent)\n    if (presentValidators.length === 0) return null\n    return control => {\n      const observables = _executeAsyncValidators(control, presentValidators)\n      return fromPromise(Promise.all(observables), _mergeErrors)\n    }\n  }\n}\n","import { toObservable, isEvent, getHandler, isReactNative } from \"./utils\";\nimport Subject from \"./observable\";\nimport Validators from \"./validators\";\n\nexport const FormHooks = \"change\" | \"blur\" | \"submit\";\n\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nexport const VALID = \"VALID\";\n\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nexport const INVALID = \"INVALID\";\n\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nexport const PENDING = \"PENDING\";\n\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nexport const DISABLED = \"DISABLED\";\n\n/**\n * Calculates the control's value according to the input type\n * @param {any} event\n * @return {any}\n */\nfunction getControlValue(event) {\n  if (isEvent(event)) {\n    switch (event.target.type) {\n      case \"checkbox\":\n        return event.target.checked;\n      case \"select-multiple\":\n        if (event.target.options) {\n          let options = event.target.options;\n          var value = [];\n          for (var i = 0, l = options.length; i < l; i++) {\n            if (options[i].selected) {\n              value.push(options[i].value);\n            }\n          }\n          return value;\n        }\n        return event.target.value;\n      default:\n        return isReactNative() ? event.nativeEvent.text : event.target.value;\n    }\n  }\n  return event;\n}\n/**\n * @param {AbstractControl} control\n * @param {(String|Number)[]|String} path\n * @param {String} delimiter\n */\nfunction _find(control, path, delimiter) {\n  if (path == null) return null;\n  if (!(path instanceof Array)) {\n    path = path.split(delimiter);\n  }\n  if (path instanceof Array && path.length === 0) return null;\n  return path.reduce((v, name) => {\n    if (v instanceof FormGroup) {\n      return v.controls[name] || null;\n    }\n    if (v instanceof FormArray) {\n      return v.at(name) || null;\n    }\n    return null;\n  }, control);\n}\n/**\n * @param {{validators: Function|Function[]|null, asyncValidators: Function|Function[]|null, updateOn: 'change' | 'blur' | 'submit'}} validatorOrOpts\n * @return {Boolean}\n */\nfunction isOptionsObj(validatorOrOpts) {\n  return (\n    validatorOrOpts != null &&\n    !Array.isArray(validatorOrOpts) &&\n    typeof validatorOrOpts === \"object\"\n  );\n}\n/**\n * @param {Function} validator\n * @return {Function}\n */\nfunction normalizeValidator(validator) {\n  if (validator.validate) {\n    return c => validator.validate(c);\n  }\n  return validator;\n}\n/**\n * @param {Function} validator\n * @return {Function}\n */\nfunction normalizeAsyncValidator(validator) {\n  if (validator.validate) {\n    return c => validator.validate(c);\n  }\n  return validator;\n}\n/**\n * @param {Function[]} validators\n * @return {Function|null}\n */\nfunction composeValidators(validators) {\n  return validators != null\n    ? Validators.compose(validators.map(normalizeValidator))\n    : null;\n}\n/**\n * @param {Function[]} validators\n * @return {Function|null}\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null\n    ? Validators.composeAsync(validators.map(normalizeAsyncValidator))\n    : null;\n}\n\nfunction coerceToValidator(validatorOrOpts) {\n  const validator = isOptionsObj(validatorOrOpts)\n    ? validatorOrOpts.validators\n    : validatorOrOpts;\n  return Array.isArray(validator)\n    ? composeValidators(validator)\n    : validator || null;\n}\n\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n  const origAsyncValidator = isOptionsObj(validatorOrOpts)\n    ? validatorOrOpts.asyncValidators\n    : asyncValidator;\n  return Array.isArray(origAsyncValidator)\n    ? composeAsyncValidators(origAsyncValidator)\n    : origAsyncValidator || null;\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and\n * `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n */\nexport class AbstractControl {\n  /**\n   * @param {Function|null} validator\n   * @param {Function|null} asyncValidator\n   */\n\n  constructor(validator, asyncValidator) {\n    this.validator = validator;\n    this.asyncValidator = asyncValidator;\n    /**\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     */\n    this.touched = false;\n    this.submitted = false;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * Note that programmatic changes to a control's value will\n     * *not* mark it dirty.\n     */\n    this.pristine = true;\n    this.meta = {};\n    this._pendingChange = this.updateOn !== \"change\";\n    this._pendingDirty = false;\n    this._pendingTouched = false;\n    this._onDisabledChange = [];\n    this.hasError = this.hasError.bind(this);\n    this.getError = this.getError.bind(this);\n    this.reset = this.reset.bind(this);\n    this.get = this.get.bind(this);\n    this.patchValue = this.patchValue.bind(this);\n    this.setValue = this.setValue.bind(this);\n  }\n  /**\n   * Returns the update strategy of the `AbstractControl` (i.e.\n   * the event on which the control will update itself).\n   * Possible values: `'change'` (default) | `'blur'` | `'submit'`\n   */\n  get updateOn() {\n    return this._updateOn\n      ? this._updateOn\n      : this.parent\n        ? this.parent.updateOn\n        : \"change\";\n  }\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * Note that programmatic changes to a control's value will\n   * *not* mark it dirty.\n   * @return {Boolean}\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * A control is `valid` when its `status === VALID`.\n   *\n   * In order to have this status, the control must have passed all its\n   * validation checks.\n   * @return {Boolean}\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status === INVALID`.\n   *\n   * In order to have this status, the control must have failed\n   * at least one of its validation checks.\n   * @return {Boolean}\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status === PENDING`.\n   *\n   * In order to have this status, the control must be in the\n   * middle of conducting a validation check.\n   */\n  get pending() {\n    return this.status === PENDING;\n  }\n  /**\n   * The parent control.\n   * * @return {FormGroup|FormArray}\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   * @return {Boolean}\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * A control is `enabled` as long as its `status !== DISABLED`.\n   *\n   * In other words, it has a status of `VALID`, `INVALID`, or\n   * `PENDING`.\n   * @return {Boolean}\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * A control is disabled if it's status is `DISABLED`\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   * @return {AbstractControl}\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  setInitialStatus() {\n    if (this.disabled) {\n      this.status = DISABLED;\n    } else {\n      this.status = VALID;\n    }\n  }\n  /**\n   * Disables the control. This means the control will be exempt from validation checks and\n   * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n   *\n   * If the control has children, all children will be disabled to maintain the model.\n   * @param {{onlySelf: Boolean, emitEvent: Boolean}} opts\n   * @return {void}\n   */\n  disable(opts = {}) {\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      control.disable({\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n\n    if (opts.emitEvent !== false) {\n      this.valueChanges.next(this.value);\n      this.statusChanges.next(this.status);\n      this.stateChanges.next();\n    }\n\n    this._updateAncestors(!!opts.onlySelf);\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control will be included in validation checks and\n   * the aggregate value of its parent. Its status is re-calculated based on its value and\n   * its validators.\n   *\n   * If the control has children, all children will be enabled.\n   * @param {{onlySelf: Boolean, emitEvent: Boolean}} opts\n   * @return {void}\n   */\n  enable(opts = {}) {\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors(!!opts.onlySelf);\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  /**\n   * Re-calculates the value and validation status of the control.\n   *\n   * By default, it will also update the value and validity of its ancestors.\n   * @param {{onlySelf: Boolean, emitEvent: Booelan}} options\n   */\n  updateValueAndValidity(options = {}) {\n    this.setInitialStatus();\n    this._updateValue();\n    const shouldValidate =\n      this.enabled && (this.updateOn !== \"submit\" || this.submitted);\n    if (shouldValidate) {\n      this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        this._runAsyncValidator(true);\n      }\n    }\n    if (options.emitEvent !== false) {\n      this.valueChanges.next(this.value);\n      this.statusChanges.next(this.status);\n      this.stateChanges.next();\n    }\n    if (this.parent && !options.onlySelf) {\n      this.parent.updateValueAndValidity(options);\n    }\n  }\n  /**\n   * Marks the control as `touched`.\n   *\n   * This will also mark all direct ancestors as `touched` to maintain\n   * the model.\n   * @param {{onlySelf: Boolean, emitEvent: Boolean}} opts\n   * @return {void}\n   */\n  markAsTouched(opts = {}) {\n    this.touched = true;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched(opts);\n    }\n    if (opts.emitEvent) {\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Marks the control as `submitted`.\n   *\n   * If the control has any children, it will also mark all children as `submitted`\n   * @param {{emitEvent: Boolean}} opts\n   * @return {void}\n   */\n  markAsSubmitted(opts = {}) {\n    this.submitted = true;\n\n    this._forEachChild(control => {\n      control.markAsSubmitted();\n    });\n\n    if (opts.emitEvent !== false) {\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Marks the control as `unsubmitted`.\n   *\n   * If the control has any children, it will also mark all children as `unsubmitted`.\n   *\n   * @param {{emitEvent: Boolean}} opts\n   * @return {void}\n   */\n  markAsUnsubmitted(opts = {}) {\n    this.submitted = false;\n\n    this._forEachChild(control => {\n      control.markAsUnsubmitted({\n        onlySelf: true\n      });\n    });\n\n    if (opts.emitEvent !== false) {\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Marks the control as `pristine`.\n   *\n   * If the control has any children, it will also mark all children as `pristine`\n   * to maintain the model, and re-calculate the `pristine` status of all parent\n   * controls.\n   * @param {{onlySelf: Boolean, emitEvent: Boolean}} opts\n   * @return {void}\n   */\n  markAsPristine(opts = {}) {\n    this.pristine = true;\n    this._pendingDirty = false;\n    if (opts.emitEvent) {\n      this.stateChanges.next();\n    }\n    this._forEachChild(control => {\n      control.markAsPristine({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /**\n   * Marks the control as `untouched`.\n   *\n   * If the control has any children, it will also mark all children as `untouched`\n   * to maintain the model, and re-calculate the `touched` status of all parent\n   * controls.\n   * @param {{onlySelf: Boolean, emitEvent: Boolean}} opts\n   * @return {void}\n   */\n  markAsUntouched(opts = {}) {\n    this.touched = false;\n    this._pendingTouched = false;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n    if (opts.emitEvent) {\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Marks the control as `dirty`.\n   *\n   * This will also mark all direct ancestors as `dirty` to maintain\n   * the model.\n   * @param {{onlySelf: Boolean, emitEvent: Boolean}} opts\n   * @return {void}\n   */\n  markAsDirty(opts = {}) {\n    this.pristine = false;\n    if (opts.emitEvent) {\n      this.stateChanges.next();\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty(opts);\n    }\n  }\n  /**\n   * Marks the control as `pending`.\n   * @param {{onlySelf: Boolean}} opts\n   * @return {void}\n   */\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending(opts);\n    }\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this will overwrite any existing sync validators.\n   * @param {Function|Function[]|null} newValidator\n   * @return {void}\n   */\n  setValidators(newValidator) {\n    this.validator = coerceToValidator(newValidator);\n  }\n  /**\n   * Sets the async validators that are active on this control. Calling this\n   * will overwrite any existing async validators.\n   */\n  setAsyncValidators(newValidator) {\n    this.asyncValidator = coerceToAsyncValidator(newValidator);\n  }\n  /**\n   * Sets errors on a form control.\n   *\n   * This is used when validations are run manually by the user, rather than automatically.\n   *\n   * Calling `setErrors` will also update the validity of the parent control.\n   *\n   * ### Example\n   *\n   * ```\n   * const login = new FormControl(\"someLogin\");\n   * login.setErrors({\n   *   \"notUnique\": true\n   * });\n   *\n   * ```\n   * @param {{onlySelf: boolean}} opts\n   * @return {void}\n   */\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * Paths can be passed in as an array or a string delimited by a dot.\n   *\n   * To get a control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name']);`\n   * @param {(String|Number)[]|String} path\n   * @return {AbstractControl|null}\n   */\n  get(path) {\n    return _find(this, path, \".\");\n  }\n  /**\n   * Returns error data if the control with the given path has the error specified. Otherwise\n   * returns null or undefined.\n   *\n   * If no path is given, it checks for the error on the present control.\n   * @param {String} errorCode\n   * @param {(String|Number)[]|String} path\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * Returns true if the control with the given path has the error specified. Otherwise\n   * returns false.\n   *\n   * If no path is given, it checks for the error on the present control.\n   * @param {String} errorCode\n   * @param {(String|Number)[]|String} path\n   * @return {Booelan}\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Empties out the sync validator list.\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  /**\n   * @param {FormGroup|FormArray} parent\n   * @return {Void}\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * @param {Boolean} onlySelf\n   */\n  _updateAncestors(onlySelf) {\n    if (this._parent && !onlySelf) {\n      this._parent.updateValueAndValidity();\n      this._parent._updatePristine();\n      this._parent._updateTouched();\n    }\n  }\n  /**\n   * @param {String} status\n   * @return {Booelan}\n   */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /**\n   * @return {String}\n   */\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  /**\n   * @param {Booelan} emitEvent\n   * @return {void}\n   */\n  _runAsyncValidator(emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors =>\n        this.setErrors(errors, {\n          emitEvent\n        })\n      );\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n    }\n  }\n  /**\n   * @param {{onlySelf: boolean}} opts\n   * @return {void}\n   */\n  _updatePristine(opts = {}) {\n    this.pristine = !this._anyControlsDirty();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /**\n   * @param {{onlySelf: boolean}} opts\n   * @return {void}\n   */\n  _updateTouched(opts = {}) {\n    this.touched = this._anyControlsTouched();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /**\n   * @return {Boolean}\n   */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  _anyControlsUnsubmitted() {\n    return this._anyControls(control => !control.submitted);\n  }\n  /**\n   * @return {Boolean}\n   */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /**\n   * @param {Booelan} emitEvent\n   * @return {void}\n   */\n  _updateControlsErrors(emitEvent) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.next();\n      this.stateChanges.next();\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent);\n    }\n  }\n  _initObservables() {\n    this.valueChanges = new Subject();\n    this.statusChanges = new Subject();\n    this.stateChanges = new Subject();\n  }\n  // Abstarct Methods\n  /**\n   * @param {Function} cb\n   * @return {void}\n   */\n  _forEachChild(cb) {}\n  _updateValue() {}\n  _allControlsDisabled() {}\n  _anyControls() {}\n  reset(value, options) {}\n  setValue() {}\n  patchValue() {}\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /**\n   * @param {{validators: Function|Function[]|null, asyncValidators: Function|Function[]|null, updateOn: 'change' | 'blur' | 'submit'}} opts\n   * @return {Void}\n   */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n}\nexport class FormControl extends AbstractControl {\n  constructor(formState, validatorOrOpts, asyncValidator) {\n    super(\n      coerceToValidator(validatorOrOpts),\n      coerceToAsyncValidator(asyncValidator, validatorOrOpts)\n    );\n    this.formState = formState;\n    this.validatorsOrOpts = validatorOrOpts;\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._pendingChange = true;\n    this._pendingDirty = false;\n    this._pendingTouched = false;\n    /**\n     * A control is `active` when its focused.\n     */\n    this.active = false;\n    this.onValueChanges = new Subject();\n    this.onBlurChanges = new Subject();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: false\n    });\n    this._initObservables();\n    /**\n     * Called whenevers an onChange event triggers.\n     * Updates the control value according to the update strategy.\n     *\n     * @param {any} event\n     * @return {void}\n     */\n    this.onChange = event => {\n      const value = getControlValue(event);\n      if (this.updateOn !== \"change\") {\n        this._pendingValue = value;\n        this._pendingChange = true;\n        if (!this._pendingDirty) {\n          this._pendingDirty = true;\n        }\n        this.stateChanges.next();\n      } else {\n        if (!this.dirty) {\n          this.markAsDirty();\n        }\n        this.setValue(value);\n      }\n      this.onValueChanges.next(value);\n    };\n    /**\n     * Called whenevers an onBlur event triggers.\n     */\n\n    this.onBlur = () => {\n      this.active = false;\n      if (this.updateOn === \"blur\") {\n        if (!this.dirty) {\n          this.markAsDirty();\n        }\n        if (!this.touched) {\n          this.markAsTouched();\n        }\n        this.setValue(this._pendingValue);\n      } else if (this.updateOn === \"submit\") {\n        this._pendingTouched = true;\n        this._pendingDirty = true;\n      } else {\n        const emitChangeToView = !this.touched;\n        if (!this.dirty) {\n          this.markAsDirty();\n        }\n        if (!this.touched) {\n          this.markAsTouched();\n        }\n        if (emitChangeToView) {\n          this.stateChanges.next();\n        }\n      }\n      this.onBlurChanges.next(this._pendingValue);\n    };\n    /**\n     * Called whenevers an onFocus event triggers.\n     */\n    this.onFocus = () => {\n      this.active = true;\n      this.stateChanges.next();\n    };\n    /**\n     * Returns the required props to bind an input element.\n     * @param {string} inputType\n     * @param {any} value\n     */\n    this.handler = (inputType, value) => getHandler(inputType, value, this);\n  }\n  /**\n   * A control is `inactive` when its not focused.\n   * @return {Boolean}\n   */\n  get inactive() {\n    return !this.active;\n  }\n  /**\n   * @param {{onlySelf: Boolean, emitEvent: Boolean}} options\n   * @return {void}\n   */\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of a control.\n   *\n   * This function is functionally the same as setValue at this level.\n   * It exists for symmetry with patchValue on `FormGroups` and\n   * `FormArrays`, where it does behave differently.\n   * @param {any} value\n   * @param {{onlySelf: Boolean, emitEvent: Boolean}} options\n   * @return {void}\n   */\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n\n  /**\n   * @param {{onlySelf: Boolean, emitEvent: Boolean}} options\n   * @return {void}\n   */\n  reset(formState = null, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**\n   * @param {Function} condition\n   * @return {Boolean}\n   */\n  _anyControls(condition) {\n    return false;\n  }\n  /**\n   * @return {Boolean}\n   */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  /**\n   * @return {Boolean}\n   */\n  _isBoxedValue(formState) {\n    return (\n      typeof formState === \"object\" &&\n      formState !== null &&\n      Object.keys(formState).length === 2 &&\n      \"value\" in formState &&\n      \"disabled\" in formState\n    );\n  }\n  _applyFormState(formState) {\n    if (this._isBoxedValue(formState)) {\n      this.value = this._pendingValue = formState.value;\n      if (formState.disabled) {\n        this.disable({\n          onlySelf: true,\n          emitEvent: false\n        });\n      } else {\n        this.enable({\n          onlySelf: true,\n          emitEvent: false\n        });\n      }\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n  _syncPendingControls() {\n    if (this.updateOn === \"submit\") {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue);\n        this._pendingChange = false;\n        return true;\n      }\n    }\n    return false;\n  }\n}\nexport class FormGroup extends AbstractControl {\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(\n      coerceToValidator(validatorOrOpts),\n      coerceToAsyncValidator(asyncValidator, validatorOrOpts)\n    );\n    this.controls = controls;\n    this.validatorOrOpts = validatorOrOpts;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: false\n    });\n    this.handleSubmit = e => {\n      if (e) {\n        e.preventDefault();\n      }\n      if (this._anyControlsUnsubmitted()) {\n        this.markAsSubmitted({\n          emitEvent: false\n        });\n      }\n      if (!this._syncPendingControls()) {\n        this.updateValueAndValidity();\n      }\n    };\n  }\n  /**\n   * Check whether there is an enabled control with the given name in the group.\n   *\n   * It will return false for disabled controls. If you'd like to check for existence in the group\n   * only, use `AbstractControl` get instead.\n   * @param {String} controlName\n   * @return {Boolean}\n   */\n  contains(controlName) {\n    return (\n      this.controls.hasOwnProperty(controlName) &&\n      this.controls[controlName].enabled\n    );\n  }\n  /**\n   * Registers a control with the group's list of controls.\n   *\n   * This method does not update the value or validity of the control, so for most cases you'll want\n   * to use addControl instead.\n   * @param {String} name\n   * @param {AbstractControl} control\n   * @return {AbstractControl}\n   */\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n\n  /**\n   * Add a control to this group.\n   * @param {String} name\n   * @param {AbstractControl} control\n   * @return {void}\n   */\n  addControl(name, control) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Remove a control from this group.\n   * @param {String} name\n   * @return {void}\n   */\n  removeControl(name) {\n    if (this.controls[name])\n      this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Replace an existing control.\n   * @param {String} name\n   * @param {AbstractControl} control\n   * @return {void}\n   */\n  setControl(name, control) {\n    if (this.controls[name])\n      this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n  /**\n   * Sets the value of the FormGroup. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * This method performs strict checks, so it will throw an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   *  ### Example\n   *  form.setValue({first: 'Jon', last: 'Snow'});\n   *  console.log(form.value);   // {first: 'Jon', last: 'Snow'}\n   * @param {{[key: string]: any}} value\n   * @param {{onlySelf: boolean, emitEvent: boolean}} options\n   * @return {void}\n   */\n  setValue(value, options = {}) {\n    this._checkAllValuesPresent(value);\n    Object.keys(value).forEach(name => {\n      this._throwIfControlMissing(name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`.\n   * @param {any} value\n   * @param {{onlySelf: boolean, emitEvent: boolean}} options\n   * @return {void}\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n    this.markAsUnsubmitted();\n    this._updatePristine(options);\n    this._updateTouched(options);\n  }\n  /**\n   *  Patches the value of the FormGroup. It accepts an object with control\n   *  names as keys, and will do its best to match the values to the correct controls\n   *  in the group.\n   *\n   *  It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   *  ### Example\n   *  ```\n   *  console.log(form.value);   // {first: null, last: null}\n   *\n   *  form.patchValue({first: 'Jon'});\n   *  console.log(form.value);   // {first: 'Jon', last: null}\n   *\n   *  ```\n   * @param {{[key: string]: any}} value\n   * @param {{onlySelf: boolean, emitEvent: boolean}} options\n   * @return {void}\n   */\n  patchValue(value, options = {}) {\n    Object.keys(value).forEach(name => {\n      if (this.controls[name]) {\n        this.controls[name].patchValue(value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the FormGroup, including any disabled controls.\n   *\n   * If you'd like to include all values regardless of disabled status, use this method.\n   * Otherwise, the `value` property is the best way to get the value of the group.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] =\n        control instanceof FormControl ? control.value : control.getRawValue();\n      return acc;\n    });\n  }\n  /**\n   * @param {{(v: any, k: String) => void}} callback\n   * @return {void}\n   */\n  _forEachChild(callback) {\n    Object.keys(this.controls).forEach(k => callback(this.controls[k], k));\n  }\n\n  _onCollectionChange() {}\n  /**\n   * @param {Function} condition\n   * @return {Boolean}\n   */\n  _anyControls(condition) {\n    let res = false;\n    this._forEachChild((control, name) => {\n      res = res || (this.contains(name) && condition(control));\n    });\n    return res;\n  }\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  _reduceValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  _reduceErrors() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.errors;\n      }\n      return acc;\n    });\n  }\n  /**\n   * @param {Function} fn\n   */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /**\n   * @return {Boolean}\n   */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  _checkAllValuesPresent(value) {\n    this._forEachChild((control, name) => {\n      if (value[name] === undefined) {\n        throw new Error(\n          `Must supply a value for form control with name: '${name}'.`\n        );\n      }\n    });\n  }\n  _throwIfControlMissing(name) {\n    if (!Object.keys(this.controls).length) {\n      throw new Error(`\n        There are no form controls registered with this group yet.\n      `);\n    }\n    if (!this.controls[name]) {\n      throw new Error(`Cannot find form control with name: ${name}.`);\n    }\n  }\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity();\n    return subtreeUpdated;\n  }\n}\nexport class FormArray extends AbstractControl {\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(\n      coerceToValidator(validatorOrOpts),\n      coerceToAsyncValidator(asyncValidator, validatorOrOpts)\n    );\n    this.controls = controls;\n    this.validatorOrOpts = validatorOrOpts;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: false\n    });\n    this.handleSubmit = e => {\n      if (e) {\n        e.preventDefault();\n      }\n      if (this._anyControlsUnsubmitted()) {\n        this.markAsSubmitted({\n          emitEvent: false\n        });\n      }\n      if (!this._syncPendingControls()) {\n        this.updateValueAndValidity();\n      }\n    };\n  }\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   * @param {Number} index\n   * @return {AbstractControl}\n   */\n  at(index) {\n    return this.controls[index];\n  }\n\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   * @param {AbstractControl} control\n   * @return {Void}\n   */\n  push(control) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   * @param {Number} index\n   * @param {AbstractControl} control\n   */\n  insert(index, control) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Remove the control at the given `index` in the array.\n   * @param {Number} index\n   */\n  removeAt(index) {\n    if (this.controls[index])\n      this.controls[index]._registerOnCollectionChange(() => {});\n    this.controls.splice(index, 1);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Replace an existing control.\n   * @param {Number} index\n   * @param {AbstractControl} control\n   */\n  setControl(index, control) {\n    if (this.controls[index])\n      this.controls[index]._registerOnCollectionChange(() => {});\n    this.controls.splice(index, 1);\n\n    if (control) {\n      this.controls.splice(index, 0, control);\n      this._registerControl(control);\n    }\n\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Length of the control array.\n   * @return {Number}\n   */\n  get length() {\n    return this.controls.length;\n  }\n\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   * @param {any[]} value\n   * @param {{onlySelf?: boolean, emitEvent?: boolean}} options\n   */\n  setValue(value, options = {}) {\n    this._checkAllValuesPresent(value);\n    value.forEach((newValue, index) => {\n      this._throwIfControlMissing(index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n\n  /**\n   *  Patches the value of the `FormArray`. It accepts an array that matches the\n   *  structure of the control, and will do its best to match the values to the correct\n   *  controls in the group.\n   * @param {any[]} value\n   * @param {{onlySelf?: boolean, emitEvent?: boolean}} options\n   */\n  patchValue(value, options = {}) {\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n\n  /**\n   * Resets the `FormArray`.\n   * @param {any[]} value\n   * @param {{onlySelf?: boolean, emitEvent?: boolean}} options\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n    this.markAsUnsubmitted();\n    this._updatePristine(options);\n    this._updateTouched(options);\n  }\n\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * If you'd like to include all values regardless of disabled status, use this method.\n   * Otherwise, the `value` property is the best way to get the value of the array.\n   * @return {any[]}\n   */\n  getRawValue() {\n    return this.controls.map(control => {\n      return control instanceof FormControl\n        ? control.value\n        : control.getRawValue();\n    });\n  }\n\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity();\n    return subtreeUpdated;\n  }\n\n  _throwIfControlMissing(index) {\n    if (!this.controls.length) {\n      throw new Error(`\n        There are no form controls registered with this array yet.\n      `);\n    }\n    if (!this.at(index)) {\n      throw new Error(`Cannot find form control at index ${index}`);\n    }\n  }\n\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n\n  _updateValue() {\n    this.value = this.controls\n      .filter(control => control.enabled || this.disabled)\n      .map(control => control.value);\n  }\n\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n\n  _checkAllValuesPresent(value) {\n    this._forEachChild((control, i) => {\n      if (value[i] === undefined) {\n        throw new Error(`Must supply a value for form control at index: ${i}.`);\n      }\n    });\n  }\n\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n\n  _onCollectionChange() {}\n}\n","import { FormControl, FormArray, FormGroup } from './model'\n\nfunction _createControl(controlConfig) {\n  if (\n    controlConfig instanceof FormControl ||\n    controlConfig instanceof FormGroup ||\n    controlConfig instanceof FormArray\n  ) {\n    return controlConfig\n  } else if (Array.isArray(controlConfig)) {\n    const value = controlConfig[0]\n    const validator = controlConfig.length > 1 ? controlConfig[1] : null\n    const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null\n    const updateOn = controlConfig.length > 3 ? controlConfig[3] : null\n    return FormBuilder.control(value, validator, asyncValidator, updateOn)\n  }\n  return FormBuilder.control(controlConfig)\n}\nfunction _reduceControls(controlsConfig) {\n  const controls = {}\n  Object.keys(controlsConfig).forEach(controlName => {\n    controls[controlName] = _createControl(controlsConfig[controlName])\n  })\n  return controls\n}\nexport default class FormBuilder {\n  /**\n   * Construct a new `FormGroup` with the given map of configuration.\n   * Valid keys for the `extra` parameter map are `validators`, `asyncValidators` & `updateOn`.\n   * @param {{[key: string]: any}} controlsConfig\n   * @param {{[key: string]: any}|null} extra\n   * @return {FormGroup}\n   */\n  static group(controlsConfig, extra) {\n    const controls = _reduceControls(controlsConfig)\n    const validators = extra != null ? extra.validators : null\n    const asyncValidators = extra != null ? extra.asyncValidators : null\n    const updateOn = extra != null ? extra.updateOn : null\n    return new FormGroup(controls, { validators, asyncValidators, updateOn })\n  }\n  /**\n   * Construct a `FormArray` from the given `controlsConfig` array of\n   * Valid keys for the `extra` parameter map are `validators`, `asyncValidators` & `updateOn`.\n   */\n  static array(controlsConfig, extra) {\n    const controls = controlsConfig.map(c => _createControl(c))\n    const validators = extra != null ? extra.validators : null\n    const asyncValidators = extra != null ? extra.asyncValidators : null\n    const updateOn = extra != null ? extra.updateOn : null\n    return new FormArray(controls, { validators, asyncValidators, updateOn })\n  }\n\n  /**\n   * Construct a new `FormControl` with the given `formState`,`validator`,`asyncValidator`\n   * and `updateOn`\n   * `formState` can either be a standalone value for the form control or an object\n   * that contains both a value and a disabled status.\n   * @param {Object} formState\n   * @param {Function|Function[]|null} validator\n   * @param {Function|Function[]|null} asyncValidator\n   * @param {string} updatOn\n   * @return {FormControl}\n   */\n  static control(formState, validators, asyncValidators, updateOn) {\n    return new FormControl(formState, { validators, asyncValidators, updateOn })\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormControl, FormArray, FormGroup } from './model'\nimport { isFunction, warning } from './utils'\n\nexport default class Field extends React.Component {\n  componentDidMount() {\n    const { control } = this.props\n    // Add listener\n    this.addListener(control)\n  }\n  componentWillReceiveProps(nextProps) {\n    const { control } = nextProps\n    if (this.props.control !== control) {\n      this.removeListener(control)\n      this.addListener(control)\n    }\n  }\n  addListener(control) {\n    if (control) {\n      control.stateChanges.subscribe(() => {\n        this.forceUpdate()\n      })\n    }\n  }\n  removeListener(control) {\n    if (control) {\n      if (control.stateChanges.observers) {\n        control.stateChanges.observers.forEach(observer => {\n          control.stateChanges.unsubscribe(observer)\n        })\n      }\n    }\n  }\n  componentWillUnmount() {\n    const { control } = this.props\n    // Remove Listener\n    this.removeListener(control)\n  }\n  shouldComponentUpdate(props) {\n    if (!props.strict) {\n      return true\n    }\n    return false\n  }\n  getComponent() {\n    const { render, children, control } = this.props\n    warning(\n      control,\n      `Missing Control.Please make sure that an instance of FormControl, FormGroup or FormArray must be passed as a control prop in the Field component`\n    )\n    if (control) {\n      // Render function as child\n      if (isFunction(children)) {\n        return children(control)\n      }\n      // Render function as render prop\n      if (isFunction(render)) {\n        return render(control)\n      }\n      return null\n    }\n    return null\n  }\n  render() {\n    return this.getComponent()\n  }\n}\n\nField.defaultProps = {\n  strict: true\n}\n\nField.propTypes = {\n  strict: PropTypes.bool,\n  control: PropTypes.oneOfType([\n    PropTypes.instanceOf(FormControl),\n    PropTypes.instanceOf(FormArray),\n    PropTypes.instanceOf(FormGroup)\n  ]).isRequired,\n  render: PropTypes.func\n}\n","import { FormGroup, FormArray, FormControl } from './model'\nimport { warning } from './utils'\n\nconst getControlFromReference = (reference, options, formState) => {\n  switch (reference) {\n    case 'FormGroup':\n      return new FormGroup({}, options)\n    case 'FormArray':\n      return new FormArray([], options)\n    case 'FormControl':\n      return new FormControl(formState, options)\n    default:\n      return null\n  }\n}\nconst configureControl = (props, context, reference) => {\n  const { name, parent, options, index, control, formState, meta } = props\n  const parentControl = parent || context.parentControl\n  let returnControl = null\n  if (control) {\n    if (reference === 'FormGroup' && control instanceof FormGroup) {\n      returnControl = control\n    } else if (reference === 'FormArray' && control instanceof FormArray) {\n      returnControl = control\n    } else if (reference === 'FormControl' && control instanceof FormControl) {\n      returnControl = control\n    } else {\n      warning(null, `Control should be an instance of ${reference}.`)\n    }\n  } else {\n    if (name) {\n      /**\n       * The presence of name prop signifies two things:-\n       * 1. The group control has to be added as a nested control i.e parent should be present.\n       * 2. Parent must be an instance of FormGroup\n       */\n      warning(\n        parentControl,\n        `Error in ${name} control: Missing parent control.\n             Please make sure that the component is wrapped in a FieldGroup or\n             you can explicitly pass a parent control as a parent prop.`\n      )\n      warning(\n        parentControl && parentControl instanceof FormGroup,\n        `Error in ${name} control: A name prop can only be used if the parent is an instance of FormGroup,\n             You can use the index prop instead of name, if the parent control is an instance of FormArray`\n      )\n      if (parentControl && parentControl instanceof FormGroup) {\n        /**\n         * Check the presence of the control, if a control is already present in the parent control\n         * then don't add a new control, return the same.\n         */\n        if (!parentControl.get(name)) {\n          parentControl.addControl(\n            name,\n            getControlFromReference(reference, options, formState)\n          )\n        } else {\n          // warning(null, `A control is already present with name ${name}.`)\n        }\n        returnControl = parentControl.get(name)\n      }\n    } else {\n      if (parentControl instanceof FormArray) {\n        /**\n         * If a index prop is defined then insert the control at a particular index otherwise\n         * push the control at the end of FormArray\n         */\n        const insertAtIndex =\n          index !== undefined ? index : parentControl.controls.length\n        parentControl.insert(\n          insertAtIndex,\n          getControlFromReference(reference, options, formState)\n        )\n        returnControl = parentControl.at(insertAtIndex)\n      } else {\n        // Create a new instance and return as control in case of FormArray and FormGroup\n        if (reference === 'FormGroup' || reference === 'FormArray') {\n          returnControl = getControlFromReference(reference, options, formState)\n        }\n      }\n    }\n  }\n  // Add the meta data about the control\n  if (returnControl && meta) {\n    returnControl.meta = meta\n  }\n  return returnControl\n}\n\nexport default configureControl\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, FormArray } from './model'\nimport Field from './Field'\nimport configureControl from './configureControl'\n\nclass FieldGroup extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n    this.control = configureControl(props, context, 'FormGroup')\n  }\n  getChildContext() {\n    return {\n      parentControl: this.control\n    }\n  }\n  render() {\n    const { strict, children, render } = this.props\n    const FieldProps = {\n      control: this.control,\n      strict,\n      render: render || children || null\n    }\n    return React.createElement(Field, FieldProps)\n  }\n}\n\nFieldGroup.childContextTypes = {\n  parentControl: PropTypes.oneOfType([\n    PropTypes.instanceOf(FormArray),\n    PropTypes.instanceOf(FormGroup)\n  ])\n}\nFieldGroup.contextTypes = {\n  parentControl: PropTypes.oneOfType([\n    PropTypes.instanceOf(FormArray),\n    PropTypes.instanceOf(FormGroup)\n  ])\n}\n\nFieldGroup.defaultProps = {\n  strict: true\n}\n\nFieldGroup.propTypes = {\n  strict: PropTypes.bool,\n  render: PropTypes.func,\n  name: PropTypes.string,\n  index: PropTypes.number,\n  control: PropTypes.instanceOf(FormGroup),\n  options: PropTypes.shape({\n    validators: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.func)\n    ]),\n    asyncValidators: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.func)\n    ]),\n    updateOn: PropTypes.oneOf(['change', 'blur', 'submit'])\n  }),\n  parent: PropTypes.oneOfType([\n    PropTypes.instanceOf(FormArray),\n    PropTypes.instanceOf(FormGroup)\n  ]),\n  meta: PropTypes.object\n}\nexport default FieldGroup\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormControl, FormArray, FormGroup } from './model'\nimport configureControl from './configureControl'\nimport Field from './Field'\nexport default class FieldControl extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n    this.control = configureControl(props, context, 'FormControl')\n  }\n  componentWillReceiveProps(nextProps) {\n    const { name } = nextProps\n    if (this.props.name !== name) {\n      this.control = configureControl(nextProps, this.context, 'FormControl')\n    }\n  }\n  render() {\n    const { strict, children, render } = this.props\n    const FieldProps = {\n      control: this.control,\n      strict,\n      render: render || children || null\n    }\n    return React.createElement(Field, FieldProps)\n  }\n}\n\nFieldControl.defaultProps = {\n  strict: true\n}\nFieldControl.propTypes = {\n  strict: PropTypes.bool,\n  render: PropTypes.func,\n  name: PropTypes.string,\n  index: PropTypes.number,\n  control: PropTypes.instanceOf(FormControl),\n  formState: PropTypes.oneOfType([\n    PropTypes.shape({\n      value: PropTypes.any,\n      disabled: PropTypes.bool\n    }),\n    PropTypes.any\n  ]),\n  options: PropTypes.shape({\n    validators: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.func)\n    ]),\n    asyncValidators: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.func)\n    ]),\n    updateOn: PropTypes.oneOf(['change', 'blur', 'submit'])\n  }),\n  parent: PropTypes.oneOfType([\n    PropTypes.instanceOf(FormArray),\n    PropTypes.instanceOf(FormGroup)\n  ]),\n  meta: PropTypes.object\n}\nFieldControl.contextTypes = {\n  parentControl: PropTypes.oneOfType([\n    PropTypes.instanceOf(FormArray),\n    PropTypes.instanceOf(FormGroup)\n  ])\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, FormArray } from './model'\nimport configureControl from './configureControl'\nimport Field from './Field'\n\nclass FieldArray extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n    this.control = configureControl(props, context, 'FormArray')\n  }\n  getChildContext() {\n    return {\n      parentControl: this.control\n    }\n  }\n  render() {\n    const { strict, children, render } = this.props\n    const FieldProps = {\n      control: this.control,\n      strict,\n      render: render || children || null\n    }\n    return React.createElement(Field, FieldProps)\n  }\n}\nFieldArray.childContextTypes = {\n  parentControl: PropTypes.oneOfType([\n    PropTypes.instanceOf(FormArray),\n    PropTypes.instanceOf(FormGroup)\n  ])\n}\nFieldArray.contextTypes = {\n  parentControl: PropTypes.oneOfType([\n    PropTypes.instanceOf(FormArray),\n    PropTypes.instanceOf(FormGroup)\n  ])\n}\nFieldArray.defaultProps = {\n  strict: true\n}\n\nFieldArray.propTypes = {\n  strict: PropTypes.bool,\n  render: PropTypes.func,\n  name: PropTypes.string,\n  index: PropTypes.number,\n  control: PropTypes.instanceOf(FormArray),\n  options: PropTypes.shape({\n    validators: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.func)\n    ]),\n    asyncValidators: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.func)\n    ]),\n    updateOn: PropTypes.oneOf(['change', 'blur', 'submit'])\n  }),\n  parent: PropTypes.oneOfType([\n    PropTypes.instanceOf(FormArray),\n    PropTypes.instanceOf(FormGroup)\n  ]),\n  meta: PropTypes.object\n}\nexport default FieldArray\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FieldControl from './FieldControl'\nimport FieldArray from './FieldArray'\nimport FieldGroup from './FieldGroup'\nimport Field from './Field'\nimport { FormGroup, FormArray } from './model'\nimport { warning, mapConfigToFieldProps, generateKey } from './utils'\nimport configureControl from './configureControl'\n\nconst FIELD_CONFIG_STRING = '$field_'\n\nexport default class FormGenerator extends React.Component {\n  constructor(props) {\n    super(props)\n    // Intiate the form property\n    this.form = null\n  }\n  componentDidMount() {\n    this.props.onMount(this.form)\n  }\n  componentDidUpdate() {\n    this.props.onMount(this.form)\n  }\n  shouldComponentUpdate(nextProps) {\n    // Only Re-renders for changes in field config\n    if (nextProps.fieldConfig !== this.props.fieldConfig) {\n      return true\n    }\n    return false\n  }\n  componentWillUnmount() {\n    const { onUnmount } = this.props\n    onUnmount()\n  }\n  // Create the form instance\n  configureForm(type = 'FormGroup') {\n    const { fieldConfig } = this.props\n    this.form = configureControl(fieldConfig, {}, type)\n  }\n  // Creates the control from fieldConfig.\n  setControl(configProps, key, name = null) {\n    // Map the props to be passed in Field\n    const propsToBePassed = mapConfigToFieldProps(configProps)\n    // Set the key\n    propsToBePassed.key = key\n    if (name) {\n      propsToBePassed.name = name\n    }\n    // Set the component for $field_\n    if (\n      (name && name.startsWith(FIELD_CONFIG_STRING)) ||\n      (typeof configProps.index === 'string' &&\n        configProps.index.startsWith(FIELD_CONFIG_STRING))\n    ) {\n      // Only subscribe when isStatic is false\n      if (configProps.isStatic === false) {\n        return React.createElement(\n          Field,\n          Object.assign({}, { control: this.form }, propsToBePassed)\n        )\n      }\n      return propsToBePassed.render()\n    }\n\n    if (configProps.controls) {\n      if (configProps.controls instanceof Array) {\n        // If controls is an array then configure FormArray\n        if (!this.form) {\n          this.configureForm('FormArray')\n          propsToBePassed.control = this.form\n        }\n        return React.createElement(\n          FieldArray,\n          Object.assign({}, propsToBePassed, {\n            render: () =>\n              configProps.controls.map((config, index) =>\n                this.setControl(config, `${key}_${index}`)\n              )\n          })\n        )\n      } else if (configProps.controls instanceof Object) {\n        // If controls is an object then configure FormGroup\n        if (!this.form) {\n          this.configureForm()\n          propsToBePassed.control = this.form\n        }\n        return React.createElement(\n          FieldGroup,\n          Object.assign({}, propsToBePassed, {\n            render: () =>\n              Object.keys(configProps.controls).map(key =>\n                this.setControl(configProps.controls[key], key, key)\n              )\n          })\n        )\n      } else {\n        warning(false, `Missing controls in fieldConfig.`)\n        return null\n      }\n    } else {\n      return React.createElement(FieldControl, propsToBePassed)\n    }\n  }\n  generateFields() {\n    // Reset the form instance\n    this.form = null\n    const { fieldConfig } = this.props\n    if (fieldConfig.controls) {\n      const fields = this.setControl(fieldConfig, generateKey('my_form'))\n      return fields\n    } else {\n      // Throw error\n      warning(false, `Missing controls in fieldConfig.`)\n      return null\n    }\n  }\n  render() {\n    const { fieldConfig } = this.props\n    if (fieldConfig) {\n      return this.generateFields()\n    }\n    return null\n  }\n}\n\nFormGenerator.propTypes = {\n  fieldConfig: PropTypes.shape({\n    controls: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n      .isRequired,\n    strict: PropTypes.bool,\n    render: PropTypes.func,\n    name: PropTypes.string,\n    index: PropTypes.number,\n    control: PropTypes.oneOfType([\n      PropTypes.instanceOf(FormArray),\n      PropTypes.instanceOf(FormGroup)\n    ]),\n    options: PropTypes.shape({\n      validators: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.arrayOf(PropTypes.func)\n      ]),\n      asyncValidators: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.arrayOf(PropTypes.func)\n      ]),\n      updateOn: PropTypes.oneOf(['change', 'blur', 'submit'])\n    }),\n    parent: PropTypes.oneOfType([\n      PropTypes.instanceOf(FormArray),\n      PropTypes.instanceOf(FormGroup)\n    ]),\n    meta: PropTypes.object\n  }).isRequired,\n  onMount: PropTypes.func,\n  onUnmount: PropTypes.func\n}\nFormGenerator.defaultProps = {\n  onMount: () => null,\n  onUnmount: () => null\n}\n","import React from 'react'\nimport { FormGroup, FormArray, FormControl } from './model'\nimport { getHandler, propsToBeMap } from './utils'\n\n/**\n * @param {FormControl|FormGroup|FormArray} control\n */\nfunction mapControlToProps(control) {\n  const mappedObject = {}\n  Object.keys(propsToBeMap).forEach(key => {\n    const controlProperty = control[propsToBeMap[key]]\n    mappedObject[key] = controlProperty\n  })\n  if (control instanceof FormControl) {\n    mappedObject['handler'] = (inputType, value) =>\n      getHandler(inputType, value, control)\n  }\n  return mappedObject\n}\n/**\n * @param {FormControl|FormGroup|FormArray} control\n * @param {String} name\n */\nfunction mapNestedControls(control, name) {\n  var extraProps = {}\n  extraProps[name] = mapControlToProps(control)\n  if (control instanceof FormGroup && control.controls) {\n    Object.keys(control.controls).forEach(childControlName => {\n      extraProps[name] = Object.assign(\n        extraProps[name],\n        mapNestedControls(control.controls[childControlName], childControlName)\n      )\n    })\n  } else if (control instanceof FormArray && control.controls) {\n    extraProps[name]['controls'] = control.controls\n  }\n  return extraProps\n}\nfunction mapProps(formControls) {\n  let extraProps = {}\n  if (formControls) {\n    Object.keys(formControls).forEach(controlName => {\n      const control = formControls[controlName]\n      if (control) {\n        extraProps = Object.assign(\n          extraProps,\n          mapNestedControls(control, controlName)\n        )\n      }\n    })\n  }\n  return extraProps\n}\n/**\n * Higher order component\n * @param {Component} ReactComponent\n * @param {FormGroup} formGroup\n * @return {Component} reactiveForm\n */\nfunction reactiveForm(ReactComponent, formGroup) {\n  const formControls = formGroup.controls\n  const extraProps = mapProps(formControls)\n  mapProps(formControls)\n  class ReactiveForm extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        extraProps\n      }\n      this.updateComponent = this.updateComponent.bind(this)\n    }\n    componentWillMount() {\n      // Add listeners\n      formGroup.stateChanges.subscribe(() => {\n        this.updateComponent()\n      })\n    }\n    componentWillUnmount() {\n      //Remove listeners\n      if (formGroup.stateChanges.observers) {\n        formGroup.stateChanges.observers.forEach(observer => {\n          formGroup.stateChanges.unsubscribe(observer)\n        })\n      }\n    }\n    updateComponent() {\n      this.setState({\n        extraProps: mapProps(formControls)\n      })\n    }\n    render() {\n      const props = Object.assign({}, this.props, this.state.extraProps)\n      return React.createElement(ReactComponent, props)\n    }\n  }\n  return ReactiveForm\n}\nexport default reactiveForm\n"],"names":["Observable","observers","fn","push","filter","item","o","thisObj","scope","window","forEach","call","fromPromise","r","cb","observable","then","mappedValue","value","next","error","isPromise","obj","isFunction","isObservable","subscribe","toObservable","obs","Error","isReactNative","navigator","product","isEvent","candidate","stopPropagation","preventDefault","propsToBeMap","touched","untouched","disabled","enabled","invalid","valid","pristine","dirty","errors","hasError","getError","status","pending","pendingValue","controlsToBeMap","ReactNative","switch","onValueChange","onBlur","onFocus","default","onChange","editable","getAbsoluteValue","undefined","getInputControls","inputType","getHandler","control","controlObject","inputControls","Object","keys","controlProperty","key","updateOn","_pendingValue","mappedObject","warning","condition","message","console","generateKey","pre","Date","getTime","FIELD_PROPS","mapConfigToFieldProps","props","config","indexOf","configKey","isEmptyInputValue","length","isPresent","_mergeErrors","arrayOfErrors","res","reduce","assign","_executeValidators","validators","map","v","_executeAsyncValidators","EMAIL_REGEXP","Validators","min","parsedValue","parseFloat","isNaN","actual","max","required","test","email","minLength","requiredLength","actualLength","maxLength","pattern","regex","regexStr","RegExp","toString","requiredPattern","actualValue","presentValidators","observables","Promise","all","VALID","INVALID","PENDING","DISABLED","getControlValue","event","target","type","checked","options","i","l","selected","nativeEvent","text","_find","path","delimiter","Array","split","name","FormGroup","controls","FormArray","at","isOptionsObj","validatorOrOpts","isArray","normalizeValidator","validator","validate","c","normalizeAsyncValidator","composeValidators","compose","composeAsyncValidators","composeAsync","coerceToValidator","coerceToAsyncValidator","asyncValidator","origAsyncValidator","asyncValidators","AbstractControl","submitted","meta","_pendingChange","_pendingDirty","_pendingTouched","_onDisabledChange","bind","reset","get","patchValue","setValue","opts","_forEachChild","disable","onlySelf","_updateValue","emitEvent","valueChanges","statusChanges","stateChanges","_updateAncestors","changeFn","enable","updateValueAndValidity","setInitialStatus","shouldValidate","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","parent","_parent","markAsTouched","markAsSubmitted","markAsUnsubmitted","markAsPristine","_updatePristine","markAsUntouched","_updateTouched","markAsDirty","markAsPending","newValidator","_updateControlsErrors","errorCode","_anyControls","_allControlsDisabled","_anyControlsHaveStatus","_asyncValidationSubscription","setErrors","unsubscribe","_anyControlsDirty","_anyControlsTouched","Subject","_onCollectionChange","_updateOn","x","FormControl","formState","validatorsOrOpts","_applyFormState","_setUpdateStrategy","active","onValueChanges","onBlurChanges","_initObservables","emitChangeToView","handler","_isBoxedValue","_setUpControls","handleSubmit","e","_anyControlsUnsubmitted","_syncPendingControls","controlName","hasOwnProperty","setParent","_registerOnCollectionChange","registerControl","_checkAllValuesPresent","_throwIfControlMissing","_reduceChildren","acc","getRawValue","callback","k","contains","_reduceValue","initValue","subtreeUpdated","updated","child","index","_registerControl","splice","newValue","some","_createControl","controlConfig","FormBuilder","_reduceControls","controlsConfig","extra","Field","addListener","nextProps","removeListener","forceUpdate","observer","strict","render","children","getComponent","React","Component","defaultProps","propTypes","PropTypes","bool","oneOfType","instanceOf","isRequired","func","getControlFromReference","reference","configureControl","context","parentControl","returnControl","addControl","insertAtIndex","insert","FieldGroup","FieldProps","createElement","childContextTypes","contextTypes","string","number","shape","arrayOf","oneOf","object","FieldControl","any","FieldArray","FIELD_CONFIG_STRING","FormGenerator","form","onMount","fieldConfig","onUnmount","configProps","propsToBePassed","startsWith","isStatic","configureForm","setControl","fields","generateFields","array","mapControlToProps","mapNestedControls","extraProps","childControlName","mapProps","formControls","reactiveForm","ReactComponent","formGroup","ReactiveForm","state","updateComponent","setState"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAqBA;EACnB,wBAAc;EAAA;;EACZ,SAAKC,SAAL,GAAiB,EAAjB;EACD;;;;gCACSC,IAAI;EACZ,WAAKD,SAAL,CAAeE,IAAf,CAAoBD,EAApB;EACD;;;kCACWA,IAAI;EACd,UAAIA,EAAJ,EAAQ;EACN,aAAKD,SAAL,GAAiB,KAAKA,SAAL,CAAeG,MAAf,CAAsB,gBAAQ;EAC7C,cAAIC,SAASH,EAAb,EAAiB;EACf,mBAAOG,IAAP;EACD;EACD,iBAAO,IAAP;EACD,SALgB,CAAjB;EAMD,OAPD,MAOO;EACL,aAAKJ,SAAL,GAAiB,EAAjB;EACD;EACF;;;2BACIK,GAAGC,SAAS;EACf,UAAIC,QAAQD,WAAWE,MAAvB;EACA,WAAKR,SAAL,CAAeS,OAAf,CAAuB,UAASL,IAAT,EAAe;EACpCA,aAAKM,IAAL,CAAUH,KAAV,EAAiBF,CAAjB;EACD,OAFD;EAGD;;;;;ECtBH;;;;;AAKA,EAAO,SAASM,WAAT,CAAqBC,CAArB,EAAwBC,EAAxB,EAA4B;EACjC,MAAMC,aAAa,IAAIf,UAAJ,EAAnB;EACAa,IACGG,IADH,CAEI,iBAAS;EACP,QAAMC,cAAc,SAAdA,WAAc;EAAA,aAAUH,KAAKA,GAAGI,KAAH,CAAL,GAAiBA,KAA3B;EAAA,KAApB;EACAH,eAAWI,IAAX,CAAgBF,YAAYC,KAAZ,CAAhB;EACD,GALL,EAMI,iBAAS;EACPH,eAAWI,IAAX,CAAgBC,KAAhB;EACD,GARL,EAUGJ,IAVH,CAUQ,IAVR,EAUc,iBAAS;EACnB,UAAMI,KAAN;EACD,GAZH;EAaA,SAAOL,UAAP;EACD;EACD;;;;;AAKA,EAAO,SAASM,SAAT,CAAmBC,GAAnB,EAAwB;EAC7B,SAAO,CAAC,CAACA,GAAF,IAAS,OAAOA,IAAIN,IAAX,KAAoB,UAApC;EACD;EACD;;;;;AAKA,EAAO,SAASO,UAAT,CAAoBD,GAApB,EAAyB;EAC9B,SAAO,eAAe,OAAOA,GAA7B;EACD;EACD;;;;;AAKA,EAAO,SAASE,YAAT,CAAsBF,GAAtB,EAA2B;EAChC,SAAO,CAAC,CAACA,GAAF,IAAS,OAAOA,IAAIG,SAAX,KAAyB,UAAzC;EACD;EACD;;;;;AAKA,EAAO,SAASC,YAAT,CAAsBb,CAAtB,EAAyB;EAC9B,MAAMc,MAAMN,UAAUR,CAAV,IAAeD,YAAYC,CAAZ,CAAf,GAAgCA,CAA5C;EACA,MAAI,CAACW,aAAaG,GAAb,CAAL,EAAwB;EACtB,UAAM,IAAIC,KAAJ,CAAU,qDAAV,CAAN;EACD;EACD,SAAOD,GAAP;EACD;AACD,EAAO,IAAME,gBAAgB,SAAhBA,aAAgB;EAAA,SAC3B,OAAOpB,MAAP,KAAkB,WAAlB,IACAA,OAAOqB,SADP,IAEArB,OAAOqB,SAAP,CAAiBC,OAFjB,IAGAtB,OAAOqB,SAAP,CAAiBC,OAAjB,KAA6B,aAJF;EAAA,CAAtB;AAKP,EAAO,IAAMC,UAAU,SAAVA,OAAU;EAAA,SACrB,CAAC,EAAEC,aAAaA,UAAUC,eAAvB,IAA0CD,UAAUE,cAAtD,CADoB;EAAA,CAAhB;;EAGP;AACA,EAAO,IAAMC,eAAe;EAC1BlB,SAAO,OADmB;EAE1BmB,WAAS,SAFiB;EAG1BC,aAAW,WAHe;EAI1BC,YAAU,UAJgB;EAK1BC,WAAS,SALiB;EAM1BC,WAAS,SANiB;EAO1BC,SAAO,OAPmB;EAQ1BC,YAAU,UARgB;EAS1BC,SAAO,OATmB;EAU1BC,UAAQ,QAVkB;EAW1BC,YAAU,UAXgB;EAY1BC,YAAU,UAZgB;EAa1BC,UAAQ,QAbkB;EAc1BC,WAAS,SAdiB;EAe1BC,gBAAc;EAfY,CAArB;AAiBP,EAAO,IAAMC,kBAAkB;EAC7BC,eAAa;EACXC,YAAQ;EACNnC,aAAO,OADD;EAENoC,qBAAe,UAFT;EAGNC,cAAQ,QAHF;EAINC,eAAS,SAJH;EAKNjB,gBAAU;EALJ,KADG;EAQXkB,aAAS;EACPvC,aAAO,OADA;EAEPwC,gBAAU,UAFH;EAGPH,cAAQ,QAHD;EAIPC,eAAS,SAJF;EAKPG,gBAAU;EALH;EARE,GADgB;EAiB7BF,WAAS;EACPvC,WAAO,OADA;EAEPwC,cAAU,UAFH;EAGPH,YAAQ,QAHD;EAIPC,aAAS,SAJF;EAKPjB,cAAU;EALH;EAjBoB,CAAxB;AAyBP,EAAO,IAAMqB,mBAAmB,SAAnBA,gBAAmB;EAAA,SAC9B1C,UAAU2C,SAAV,IAAuB3C,UAAU,IAAjC,GAAwC,EAAxC,GAA6CA,KADf;EAAA,CAAzB;;AAGP,EAAO,IAAM4C,mBAAmB,SAAnBA,gBAAmB;EAAA,SAC9BjC,kBACIsB,gBAAgBC,WAAhB,CAA4BW,SAA5B,KACAZ,gBAAgBC,WAAhB,CAA4BK,OAFhC,GAGIN,gBAAgBM,OAJU;EAAA,CAAzB;;AAMP,EAAO,SAASO,UAAT,CAAoBD,SAApB,EAA+B7C,KAA/B,EAAsC+C,OAAtC,EAA+C;EACpD,MAAMC,gBAAgB,EAAtB;EACA,MAAMC,gBAAgBL,iBAAiBC,SAAjB,CAAtB;EACAK,SAAOC,IAAP,CAAYF,aAAZ,EAA2BzD,OAA3B,CAAmC,eAAO;EACxC,QAAI4D,kBAAkB,IAAtB;EACA,QAAIC,QAAQ,OAAZ,EAAqB;EACnB,UAAIN,QAAQO,QAAR,KAAqB,QAAzB,EAAmC;EACjCF,0BAAkBV,iBAAiBK,QAAQQ,aAAzB,CAAlB;EACD,OAFD,MAEO;EACLH,0BAAkBV,iBAAiBK,QAAQ/C,KAAzB,CAAlB;EACD;EACF,KAND,MAMO;EACLoD,wBAAkBL,QAAQE,cAAcI,GAAd,CAAR,CAAlB;EACD;EACDL,kBAAcK,GAAd,IAAqBD,eAArB;EACD,GAZD;EAaA,MAAMI,eAAeR,aAArB;EACA,UAAQH,SAAR;EACE,SAAK,UAAL;EACEW,mBAAa,SAAb,IAA0B,CAAC,CAACA,aAAaxD,KAAzC;EACAwD,mBAAa,MAAb,IAAuBX,SAAvB;EACA;EACF,SAAK,OAAL;EACEW,mBAAa,SAAb,IAA0BA,aAAaxD,KAAb,KAAuBA,KAAjD;EACAwD,mBAAaxD,KAAb,GAAqBA,KAArB;EACAwD,mBAAa,MAAb,IAAuBX,SAAvB;EACA;EACF;EAVF;EAYA,SAAOW,YAAP;EACD;EACD;;;;;;AAMA,EAAO,SAASC,OAAT,CAAiBC,SAAjB,EAA4BC,OAA5B,EAAqC;EAC1C,EAA2C;EACzC,QAAI,CAACD,SAAL,EAAgB;EACdE,cAAQ1D,KAAR,eAA0ByD,OAA1B;EACD;EACF;EACF;EACD;;;;AAIA,EAAO,IAAME,cAAc,SAAdA,WAAc,MAAO;EAChC,SAAUC,GAAV,SAAiB,IAAIC,IAAJ,GAAWC,OAAX,EAAjB;EACD,CAFM;;AAIP,EAAO,IAAMC,cAAc,CACzB,QADyB,EAEzB,QAFyB,EAGzB,MAHyB,EAIzB,OAJyB,EAKzB,SALyB,EAMzB,WANyB,EAOzB,SAPyB,EAQzB,QARyB,EASzB,MATyB,CAApB;;AAYP,EAAO,IAAMC,wBAAwB,SAAxBA,qBAAwB,SAAU;EAC7C,MAAMC,QAAQ,EAAd;EACA,MAAIC,MAAJ,EAAY;EACVlB,WAAOC,IAAP,CAAYiB,MAAZ,EAAoB5E,OAApB,CAA4B,qBAAa;EACvC,UAAIyE,YAAYI,OAAZ,CAAoBC,SAApB,IAAiC,CAAC,CAAtC,EAAyC;EACvCH,cAAMG,SAAN,IAAmBF,OAAOE,SAAP,CAAnB;EACD;EACF,KAJD;EAKD;EACD,SAAOH,KAAP;EACD,CAVM;;ECtLP,SAASI,iBAAT,CAA2BvE,KAA3B,EAAkC;EAChC,SAAOA,SAAS,IAAT,IAAiBA,MAAMwE,MAAN,KAAiB,CAAzC;EACD;EACD,SAASC,SAAT,CAAmBrF,CAAnB,EAAsB;EACpB,SAAOA,KAAK,IAAZ;EACD;EACD,SAASsF,YAAT,CAAsBC,aAAtB,EAAqC;EACnC,MAAMC,MAAMD,cAAcE,MAAd,CAAqB,UAACD,GAAD,EAAMjD,MAAN,EAAiB;EAChD,WAAOA,UAAU,IAAV,GAAiBuB,OAAO4B,MAAP,CAAc,EAAd,EAAkBF,GAAlB,EAAuBjD,MAAvB,CAAjB,GAAkDiD,GAAzD;EACD,GAFW,EAET,EAFS,CAAZ;EAGA,SAAO1B,OAAOC,IAAP,CAAYyB,GAAZ,EAAiBJ,MAAjB,KAA4B,CAA5B,GAAgC,IAAhC,GAAuCI,GAA9C;EACD;EACD,SAASG,kBAAT,CAA4BhC,OAA5B,EAAqCiC,UAArC,EAAiD;EAC/C,SAAOA,WAAWC,GAAX,CAAe;EAAA,WAAKC,EAAEnC,OAAF,CAAL;EAAA,GAAf,CAAP;EACD;EACD,SAASoC,uBAAT,CAAiCpC,OAAjC,EAA0CiC,UAA1C,EAAsD;EACpD,SAAOA,WAAWC,GAAX,CAAe;EAAA,WAAKC,EAAEnC,OAAF,CAAL;EAAA,GAAf,CAAP;EACD;;EAED,IAAMqC,eAAe,yJAArB;;MAEqBC;;;;;;;;EACnB;;;0BAGWC,MAAK;EACd,aAAO,mBAAW;EAChB,YAAIf,kBAAkBxB,QAAQ/C,KAA1B,KAAoCuE,kBAAkBe,IAAlB,CAAxC,EAAgE;EAC9D,iBAAO,IAAP,CAD8D;EAE/D;EACD,YAAMC,cAAcC,WAAWzC,QAAQ/C,KAAnB,CAApB;EACA,eAAO,CAACyF,MAAMF,WAAN,CAAD,IAAuBA,cAAcD,IAArC,GACH,EAAEA,KAAK,EAAEA,SAAF,EAAOI,QAAQH,WAAf,EAAP,EADG,GAEH,IAFJ;EAGD,OARD;EASD;;EAED;;;;;;0BAGWI,MAAK;EACd,aAAO,mBAAW;EAChB,YAAIpB,kBAAkBxB,QAAQ/C,KAA1B,KAAoCuE,kBAAkBoB,IAAlB,CAAxC,EAAgE;EAC9D,iBAAO,IAAP,CAD8D;EAE/D;EACD,YAAMJ,cAAcC,WAAWzC,QAAQ/C,KAAnB,CAApB;EACA,eAAO,CAACyF,MAAMF,WAAN,CAAD,IAAuBA,cAAcI,IAArC,GACH,EAAEA,KAAK,EAAEA,SAAF,EAAOD,QAAQH,WAAf,EAAP,EADG,GAEH,IAFJ;EAGD,OARD;EASD;;EAED;;;;;;+BAGgBxC,SAAS;EACvB,aAAOwB,kBAAkBxB,QAAQ/C,KAA1B,IAAmC,EAAE4F,UAAU,IAAZ,EAAnC,GAAwD,IAA/D;EACD;;EAED;;;;;;mCAGoB7C,SAAS;EAC3B,aAAOA,QAAQ/C,KAAR,KAAkB,IAAlB,GAAyB,IAAzB,GAAgC,EAAE4F,UAAU,IAAZ,EAAvC;EACD;;EAED;;;;;;4BAGa7C,SAAS;EACpB,UAAIwB,kBAAkBxB,QAAQ/C,KAA1B,CAAJ,EAAsC;EACpC,eAAO,IAAP;EACD;EACD,aAAOoF,aAAaS,IAAb,CAAkB9C,QAAQ/C,KAA1B,IAAmC,IAAnC,GAA0C,EAAE8F,OAAO,IAAT,EAAjD;EACD;;EAED;;;;;;gCAGiBC,YAAW;EAC1B,aAAO,mBAAW;EAChB,YAAIxB,kBAAkBxB,QAAQ/C,KAA1B,CAAJ,EAAsC;EACpC,iBAAO,IAAP,CADoC;EAErC;EACD,YAAMwE,SAASzB,QAAQ/C,KAAR,GAAgB+C,QAAQ/C,KAAR,CAAcwE,MAA9B,GAAuC,CAAtD;EACA,eAAOA,SAASuB,UAAT,GACH,EAAEA,WAAW,EAAEC,gBAAgBD,UAAlB,EAA6BE,cAAczB,MAA3C,EAAb,EADG,GAEH,IAFJ;EAGD,OARD;EASD;;EAED;;;;;;gCAGiB0B,YAAW;EAC1B,aAAO,mBAAW;EAChB,YAAM1B,SAASzB,QAAQ/C,KAAR,GAAgB+C,QAAQ/C,KAAR,CAAcwE,MAA9B,GAAuC,CAAtD;EACA,eAAOA,SAAS0B,UAAT,GACH,EAAEA,WAAW,EAAEF,gBAAgBE,UAAlB,EAA6BD,cAAczB,MAA3C,EAAb,EADG,GAEH,IAFJ;EAGD,OALD;EAMD;EACD;;;;;;8BAGe2B,UAAS;EACtB,UAAI,CAACA,QAAL,EAAc,OAAO,IAAP;EACd,UAAIC,cAAJ;EACA,UAAIC,iBAAJ;EACA,UAAI,OAAOF,QAAP,KAAmB,QAAvB,EAAiC;EAC/BE,yBAAeF,QAAf;EACAC,gBAAQ,IAAIE,MAAJ,CAAWD,QAAX,CAAR;EACD,OAHD,MAGO;EACLA,mBAAWF,SAAQI,QAAR,EAAX;EACAH,gBAAQD,QAAR;EACD;EACD,aAAO,mBAAW;EAChB,YAAI5B,kBAAkBxB,QAAQ/C,KAA1B,CAAJ,EAAsC;EACpC,iBAAO,IAAP,CADoC;EAErC;EACD,eAAOoG,MAAMP,IAAN,CAAW9C,QAAQ/C,KAAnB,IACH,IADG,GAEH,EAAEmG,SAAS,EAAEK,iBAAiBH,QAAnB,EAA6BI,aAAa1D,QAAQ/C,KAAlD,EAAX,EAFJ;EAGD,OAPD;EAQD;EACD;;;;;;;;;8BAMegF,YAAY;EACzB,UAAI,CAACA,UAAL,EAAiB,OAAO,IAAP;EACjB,UAAM0B,oBAAoB1B,WAAW9F,MAAX,CAAkBuF,SAAlB,CAA1B;EACA,UAAIiC,kBAAkBlC,MAAlB,KAA6B,CAAjC,EAAoC,OAAO,IAAP;EACpC,aAAO;EAAA,eACLE,aAAaK,mBAAmBhC,OAAnB,EAA4B2D,iBAA5B,CAAb,CADK;EAAA,OAAP;EAED;EACD;;;;;;;;;mCAMoB1B,YAAY;EAC9B,UAAI,CAACA,UAAL,EAAiB,OAAO,IAAP;EACjB,UAAM0B,oBAAoB1B,WAAW9F,MAAX,CAAkBuF,SAAlB,CAA1B;EACA,UAAIiC,kBAAkBlC,MAAlB,KAA6B,CAAjC,EAAoC,OAAO,IAAP;EACpC,aAAO,mBAAW;EAChB,YAAMmC,cAAcxB,wBAAwBpC,OAAxB,EAAiC2D,iBAAjC,CAApB;EACA,eAAOhH,YAAYkH,QAAQC,GAAR,CAAYF,WAAZ,CAAZ,EAAsCjC,YAAtC,CAAP;EACD,OAHD;EAID;;;;;ECpJH;;;AAGA,EAAO,IAAMoC,QAAQ,OAAd;;EAEP;;;AAGA,EAAO,IAAMC,UAAU,SAAhB;;EAEP;;;;AAIA,EAAO,IAAMC,UAAU,SAAhB;;EAEP;;;;AAIA,EAAO,IAAMC,WAAW,UAAjB;;EAEP;;;;;EAKA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAC9B,MAAIrG,QAAQqG,KAAR,CAAJ,EAAoB;EAClB,YAAQA,MAAMC,MAAN,CAAaC,IAArB;EACE,WAAK,UAAL;EACE,eAAOF,MAAMC,MAAN,CAAaE,OAApB;EACF,WAAK,iBAAL;EACE,YAAIH,MAAMC,MAAN,CAAaG,OAAjB,EAA0B;EACxB,cAAIA,UAAUJ,MAAMC,MAAN,CAAaG,OAA3B;EACA,cAAIvH,QAAQ,EAAZ;EACA,eAAK,IAAIwH,IAAI,CAAR,EAAWC,IAAIF,QAAQ/C,MAA5B,EAAoCgD,IAAIC,CAAxC,EAA2CD,GAA3C,EAAgD;EAC9C,gBAAID,QAAQC,CAAR,EAAWE,QAAf,EAAyB;EACvB1H,oBAAMf,IAAN,CAAWsI,QAAQC,CAAR,EAAWxH,KAAtB;EACD;EACF;EACD,iBAAOA,KAAP;EACD;EACD,eAAOmH,MAAMC,MAAN,CAAapH,KAApB;EACF;EACE,eAAOW,kBAAkBwG,MAAMQ,WAAN,CAAkBC,IAApC,GAA2CT,MAAMC,MAAN,CAAapH,KAA/D;EAhBJ;EAkBD;EACD,SAAOmH,KAAP;EACD;EACD;;;;;EAKA,SAASU,KAAT,CAAe9E,OAAf,EAAwB+E,IAAxB,EAA8BC,SAA9B,EAAyC;EACvC,MAAID,QAAQ,IAAZ,EAAkB,OAAO,IAAP;EAClB,MAAI,EAAEA,gBAAgBE,KAAlB,CAAJ,EAA8B;EAC5BF,WAAOA,KAAKG,KAAL,CAAWF,SAAX,CAAP;EACD;EACD,MAAID,gBAAgBE,KAAhB,IAAyBF,KAAKtD,MAAL,KAAgB,CAA7C,EAAgD,OAAO,IAAP;EAChD,SAAOsD,KAAKjD,MAAL,CAAY,UAACK,CAAD,EAAIgD,IAAJ,EAAa;EAC9B,QAAIhD,aAAaiD,SAAjB,EAA4B;EAC1B,aAAOjD,EAAEkD,QAAF,CAAWF,IAAX,KAAoB,IAA3B;EACD;EACD,QAAIhD,aAAamD,SAAjB,EAA4B;EAC1B,aAAOnD,EAAEoD,EAAF,CAAKJ,IAAL,KAAc,IAArB;EACD;EACD,WAAO,IAAP;EACD,GARM,EAQJnF,OARI,CAAP;EASD;EACD;;;;EAIA,SAASwF,YAAT,CAAsBC,eAAtB,EAAuC;EACrC,SACEA,mBAAmB,IAAnB,IACA,CAACR,MAAMS,OAAN,CAAcD,eAAd,CADD,IAEA,QAAOA,eAAP,yCAAOA,eAAP,OAA2B,QAH7B;EAKD;EACD;;;;EAIA,SAASE,kBAAT,CAA4BC,SAA5B,EAAuC;EACrC,MAAIA,UAAUC,QAAd,EAAwB;EACtB,WAAO;EAAA,aAAKD,UAAUC,QAAV,CAAmBC,CAAnB,CAAL;EAAA,KAAP;EACD;EACD,SAAOF,SAAP;EACD;EACD;;;;EAIA,SAASG,uBAAT,CAAiCH,SAAjC,EAA4C;EAC1C,MAAIA,UAAUC,QAAd,EAAwB;EACtB,WAAO;EAAA,aAAKD,UAAUC,QAAV,CAAmBC,CAAnB,CAAL;EAAA,KAAP;EACD;EACD,SAAOF,SAAP;EACD;EACD;;;;EAIA,SAASI,iBAAT,CAA2B/D,UAA3B,EAAuC;EACrC,SAAOA,cAAc,IAAd,GACHK,WAAW2D,OAAX,CAAmBhE,WAAWC,GAAX,CAAeyD,kBAAf,CAAnB,CADG,GAEH,IAFJ;EAGD;EACD;;;;EAIA,SAASO,sBAAT,CAAgCjE,UAAhC,EAA4C;EAC1C,SAAOA,cAAc,IAAd,GACHK,WAAW6D,YAAX,CAAwBlE,WAAWC,GAAX,CAAe6D,uBAAf,CAAxB,CADG,GAEH,IAFJ;EAGD;;EAED,SAASK,iBAAT,CAA2BX,eAA3B,EAA4C;EAC1C,MAAMG,YAAYJ,aAAaC,eAAb,IACdA,gBAAgBxD,UADF,GAEdwD,eAFJ;EAGA,SAAOR,MAAMS,OAAN,CAAcE,SAAd,IACHI,kBAAkBJ,SAAlB,CADG,GAEHA,aAAa,IAFjB;EAGD;;EAED,SAASS,sBAAT,CAAgCC,cAAhC,EAAgDb,eAAhD,EAAiE;EAC/D,MAAMc,qBAAqBf,aAAaC,eAAb,IACvBA,gBAAgBe,eADO,GAEvBF,cAFJ;EAGA,SAAOrB,MAAMS,OAAN,CAAca,kBAAd,IACHL,uBAAuBK,kBAAvB,CADG,GAEHA,sBAAsB,IAF1B;EAGD;EACD;;;;;;;;;AASA,MAAaE,eAAb;EACE;;;;;EAKA,2BAAYb,SAAZ,EAAuBU,cAAvB,EAAuC;EAAA;;EACrC,SAAKV,SAAL,GAAiBA,SAAjB;EACA,SAAKU,cAAL,GAAsBA,cAAtB;EACA;;;;EAIA,SAAKlI,OAAL,GAAe,KAAf;EACA,SAAKsI,SAAL,GAAiB,KAAjB;EACA;;;;;;;EAOA,SAAKhI,QAAL,GAAgB,IAAhB;EACA,SAAKiI,IAAL,GAAY,EAAZ;EACA,SAAKC,cAAL,GAAsB,KAAKrG,QAAL,KAAkB,QAAxC;EACA,SAAKsG,aAAL,GAAqB,KAArB;EACA,SAAKC,eAAL,GAAuB,KAAvB;EACA,SAAKC,iBAAL,GAAyB,EAAzB;EACA,SAAKlI,QAAL,GAAgB,KAAKA,QAAL,CAAcmI,IAAd,CAAmB,IAAnB,CAAhB;EACA,SAAKlI,QAAL,GAAgB,KAAKA,QAAL,CAAckI,IAAd,CAAmB,IAAnB,CAAhB;EACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;EACA,SAAKE,GAAL,GAAW,KAAKA,GAAL,CAASF,IAAT,CAAc,IAAd,CAAX;EACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;EACA,SAAKI,QAAL,GAAgB,KAAKA,QAAL,CAAcJ,IAAd,CAAmB,IAAnB,CAAhB;EACD;EACD;;;;;;;EAnCF;EAAA;EAAA,uCAiIqB;EACjB,UAAI,KAAK1I,QAAT,EAAmB;EACjB,aAAKS,MAAL,GAAcmF,QAAd;EACD,OAFD,MAEO;EACL,aAAKnF,MAAL,GAAcgF,KAAd;EACD;EACF;EACD;;;;;;;;;EAxIF;EAAA;EAAA,8BAgJqB;EAAA,UAAXsD,IAAW,uEAAJ,EAAI;;EACjB,WAAKtI,MAAL,GAAcmF,QAAd;EACA,WAAKtF,MAAL,GAAc,IAAd;EACA,WAAK0I,aAAL,CAAmB,mBAAW;EAC5BtH,gBAAQuH,OAAR,CAAgB;EACdC,oBAAU;EADI,SAAhB;EAGD,OAJD;EAKA,WAAKC,YAAL;;EAEA,UAAIJ,KAAKK,SAAL,KAAmB,KAAvB,EAA8B;EAC5B,aAAKC,YAAL,CAAkBzK,IAAlB,CAAuB,KAAKD,KAA5B;EACA,aAAK2K,aAAL,CAAmB1K,IAAnB,CAAwB,KAAK6B,MAA7B;EACA,aAAK8I,YAAL,CAAkB3K,IAAlB;EACD;;EAED,WAAK4K,gBAAL,CAAsB,CAAC,CAACT,KAAKG,QAA7B;EACA,WAAKT,iBAAL,CAAuBtK,OAAvB,CAA+B;EAAA,eAAYsL,SAAS,IAAT,CAAZ;EAAA,OAA/B;EACD;EACD;;;;;;;;;;EAnKF;EAAA;EAAA,6BA4KoB;EAAA,UAAXV,IAAW,uEAAJ,EAAI;;EAChB,WAAKtI,MAAL,GAAcgF,KAAd;EACA,WAAKuD,aAAL,CAAmB,mBAAW;EAC5BtH,gBAAQgI,MAAR,CAAe;EACbR,oBAAU;EADG,SAAf;EAGD,OAJD;EAKA,WAAKS,sBAAL,CAA4B;EAC1BT,kBAAU,IADgB;EAE1BE,mBAAWL,KAAKK;EAFU,OAA5B;EAIA,WAAKI,gBAAL,CAAsB,CAAC,CAACT,KAAKG,QAA7B;EACA,WAAKT,iBAAL,CAAuBtK,OAAvB,CAA+B;EAAA,eAAYsL,SAAS,KAAT,CAAZ;EAAA,OAA/B;EACD;EACD;;;;;;;EA1LF;EAAA;EAAA,6CAgMuC;EAAA,UAAdvD,OAAc,uEAAJ,EAAI;;EACnC,WAAK0D,gBAAL;EACA,WAAKT,YAAL;EACA,UAAMU,iBACJ,KAAK5J,OAAL,KAAiB,KAAKgC,QAAL,KAAkB,QAAlB,IAA8B,KAAKmG,SAApD,CADF;EAEA,UAAIyB,cAAJ,EAAoB;EAClB,aAAKC,2BAAL;EACA,aAAKxJ,MAAL,GAAc,KAAKyJ,aAAL,EAAd;EACA,aAAKtJ,MAAL,GAAc,KAAKuJ,gBAAL,EAAd;EACA,YAAI,KAAKvJ,MAAL,KAAgBgF,KAAhB,IAAyB,KAAKhF,MAAL,KAAgBkF,OAA7C,EAAsD;EACpD,eAAKsE,kBAAL,CAAwB,IAAxB;EACD;EACF;EACD,UAAI/D,QAAQkD,SAAR,KAAsB,KAA1B,EAAiC;EAC/B,aAAKC,YAAL,CAAkBzK,IAAlB,CAAuB,KAAKD,KAA5B;EACA,aAAK2K,aAAL,CAAmB1K,IAAnB,CAAwB,KAAK6B,MAA7B;EACA,aAAK8I,YAAL,CAAkB3K,IAAlB;EACD;EACD,UAAI,KAAKsL,MAAL,IAAe,CAAChE,QAAQgD,QAA5B,EAAsC;EACpC,aAAKgB,MAAL,CAAYP,sBAAZ,CAAmCzD,OAAnC;EACD;EACF;EACD;;;;;;;;;EAtNF;EAAA;EAAA,oCA8N2B;EAAA,UAAX6C,IAAW,uEAAJ,EAAI;;EACvB,WAAKjJ,OAAL,GAAe,IAAf;EACA,UAAI,KAAKqK,OAAL,IAAgB,CAACpB,KAAKG,QAA1B,EAAoC;EAClC,aAAKiB,OAAL,CAAaC,aAAb,CAA2BrB,IAA3B;EACD;EACD,UAAIA,KAAKK,SAAT,EAAoB;EAClB,aAAKG,YAAL,CAAkB3K,IAAlB;EACD;EACF;EACD;;;;;;;;EAvOF;EAAA;EAAA,sCA8O6B;EAAA,UAAXmK,IAAW,uEAAJ,EAAI;;EACzB,WAAKX,SAAL,GAAiB,IAAjB;;EAEA,WAAKY,aAAL,CAAmB,mBAAW;EAC5BtH,gBAAQ2I,eAAR;EACD,OAFD;;EAIA,UAAItB,KAAKK,SAAL,KAAmB,KAAvB,EAA8B;EAC5B,aAAKG,YAAL,CAAkB3K,IAAlB;EACD;EACF;EACD;;;;;;;;;EAzPF;EAAA;EAAA,wCAiQ+B;EAAA,UAAXmK,IAAW,uEAAJ,EAAI;;EAC3B,WAAKX,SAAL,GAAiB,KAAjB;;EAEA,WAAKY,aAAL,CAAmB,mBAAW;EAC5BtH,gBAAQ4I,iBAAR,CAA0B;EACxBpB,oBAAU;EADc,SAA1B;EAGD,OAJD;;EAMA,UAAIH,KAAKK,SAAL,KAAmB,KAAvB,EAA8B;EAC5B,aAAKG,YAAL,CAAkB3K,IAAlB;EACD;EACF;EACD;;;;;;;;;;EA9QF;EAAA;EAAA,qCAuR4B;EAAA,UAAXmK,IAAW,uEAAJ,EAAI;;EACxB,WAAK3I,QAAL,GAAgB,IAAhB;EACA,WAAKmI,aAAL,GAAqB,KAArB;EACA,UAAIQ,KAAKK,SAAT,EAAoB;EAClB,aAAKG,YAAL,CAAkB3K,IAAlB;EACD;EACD,WAAKoK,aAAL,CAAmB,mBAAW;EAC5BtH,gBAAQ6I,cAAR,CAAuB;EACrBrB,oBAAU;EADW,SAAvB;EAGD,OAJD;EAKA,UAAI,KAAKiB,OAAL,IAAgB,CAACpB,KAAKG,QAA1B,EAAoC;EAClC,aAAKiB,OAAL,CAAaK,eAAb,CAA6BzB,IAA7B;EACD;EACF;EACD;;;;;;;;;;EAtSF;EAAA;EAAA,sCA+S6B;EAAA,UAAXA,IAAW,uEAAJ,EAAI;;EACzB,WAAKjJ,OAAL,GAAe,KAAf;EACA,WAAK0I,eAAL,GAAuB,KAAvB;EACA,WAAKQ,aAAL,CAAmB,mBAAW;EAC5BtH,gBAAQ+I,eAAR,CAAwB;EACtBvB,oBAAU;EADY,SAAxB;EAGD,OAJD;EAKA,UAAI,KAAKiB,OAAL,IAAgB,CAACpB,KAAKG,QAA1B,EAAoC;EAClC,aAAKiB,OAAL,CAAaO,cAAb,CAA4B3B,IAA5B;EACD;EACD,UAAIA,KAAKK,SAAT,EAAoB;EAClB,aAAKG,YAAL,CAAkB3K,IAAlB;EACD;EACF;EACD;;;;;;;;;EA9TF;EAAA;EAAA,kCAsUyB;EAAA,UAAXmK,IAAW,uEAAJ,EAAI;;EACrB,WAAK3I,QAAL,GAAgB,KAAhB;EACA,UAAI2I,KAAKK,SAAT,EAAoB;EAClB,aAAKG,YAAL,CAAkB3K,IAAlB;EACD;EACD,UAAI,KAAKuL,OAAL,IAAgB,CAACpB,KAAKG,QAA1B,EAAoC;EAClC,aAAKiB,OAAL,CAAaQ,WAAb,CAAyB5B,IAAzB;EACD;EACF;EACD;;;;;;EA/UF;EAAA;EAAA,oCAoV2B;EAAA,UAAXA,IAAW,uEAAJ,EAAI;;EACvB,WAAKtI,MAAL,GAAckF,OAAd;;EAEA,UAAI,KAAKwE,OAAL,IAAgB,CAACpB,KAAKG,QAA1B,EAAoC;EAClC,aAAKiB,OAAL,CAAaS,aAAb,CAA2B7B,IAA3B;EACD;EACF;EACD;;;;;;;EA3VF;EAAA;EAAA,kCAiWgB8B,YAjWhB,EAiW8B;EAC1B,WAAKvD,SAAL,GAAiBQ,kBAAkB+C,YAAlB,CAAjB;EACD;EACD;;;;;EApWF;EAAA;EAAA,uCAwWqBA,YAxWrB,EAwWmC;EAC/B,WAAK7C,cAAL,GAAsBD,uBAAuB8C,YAAvB,CAAtB;EACD;EACD;;;;;;;;;;;;;;;;;;;;EA3WF;EAAA;EAAA,8BA8XYvK,MA9XZ,EA8X+B;EAAA,UAAXyI,IAAW,uEAAJ,EAAI;;EAC3B,WAAKzI,MAAL,GAAcA,MAAd;EACA,WAAKwK,qBAAL,CAA2B/B,KAAKK,SAAL,KAAmB,KAA9C;EACD;EACD;;;;;;;;;;;;;;;;EAlYF;EAAA;EAAA,2BAiZM3C,IAjZN,EAiZY;EACR,aAAOD,MAAM,IAAN,EAAYC,IAAZ,EAAkB,GAAlB,CAAP;EACD;EACD;;;;;;;;;EApZF;EAAA;EAAA,6BA4ZWsE,SA5ZX,EA4ZsBtE,IA5ZtB,EA4Z4B;EACxB,UAAM/E,UAAU+E,OAAO,KAAKmC,GAAL,CAASnC,IAAT,CAAP,GAAwB,IAAxC;EACA,aAAO/E,WAAWA,QAAQpB,MAAnB,GAA4BoB,QAAQpB,MAAR,CAAeyK,SAAf,CAA5B,GAAwD,IAA/D;EACD;EACD;;;;;;;;;;EAhaF;EAAA;EAAA,6BAyaWA,SAzaX,EAyasBtE,IAzatB,EAya4B;EACxB,aAAO,CAAC,CAAC,KAAKjG,QAAL,CAAcuK,SAAd,EAAyBtE,IAAzB,CAAT;EACD;EACD;;;;EA5aF;EAAA;EAAA,sCA+aoB;EAChB,WAAKa,SAAL,GAAiB,IAAjB;EACD;EACD;;;;EAlbF;EAAA;EAAA,2CAqbyB;EACrB,WAAKU,cAAL,GAAsB,IAAtB;EACD;EACD;;;;;EAxbF;EAAA;EAAA,8BA4bYkC,MA5bZ,EA4boB;EAChB,WAAKC,OAAL,GAAeD,MAAf;EACD;EACD;;;;EA/bF;EAAA;EAAA,qCAkcmBhB,QAlcnB,EAkc6B;EACzB,UAAI,KAAKiB,OAAL,IAAgB,CAACjB,QAArB,EAA+B;EAC7B,aAAKiB,OAAL,CAAaR,sBAAb;EACA,aAAKQ,OAAL,CAAaK,eAAb;EACA,aAAKL,OAAL,CAAaO,cAAb;EACD;EACF;EACD;;;;;EAzcF;EAAA;EAAA,2CA6cyBjK,MA7czB,EA6ciC;EAC7B,aAAO,KAAKuK,YAAL,CAAkB;EAAA,eAAWtJ,QAAQjB,MAAR,KAAmBA,MAA9B;EAAA,OAAlB,CAAP;EACD;EACD;;;;EAhdF;EAAA;EAAA,uCAmdqB;EACjB,UAAI,KAAKwK,oBAAL,EAAJ,EAAiC,OAAOrF,QAAP;EACjC,UAAI,KAAKtF,MAAT,EAAiB,OAAOoF,OAAP;EACjB,UAAI,KAAKwF,sBAAL,CAA4BvF,OAA5B,CAAJ,EAA0C,OAAOA,OAAP;EAC1C,UAAI,KAAKuF,sBAAL,CAA4BxF,OAA5B,CAAJ,EAA0C,OAAOA,OAAP;EAC1C,aAAOD,KAAP;EACD;EAzdH;EAAA;EAAA,oCA0dkB;EACd,aAAO,KAAK6B,SAAL,GAAiB,KAAKA,SAAL,CAAe,IAAf,CAAjB,GAAwC,IAA/C;EACD;EACD;;;;;EA7dF;EAAA;EAAA,uCAieqB8B,SAjerB,EAiegC;EAAA;;EAC5B,UAAI,KAAKpB,cAAT,EAAyB;EACvB,aAAKvH,MAAL,GAAckF,OAAd;EACA,YAAMvG,MAAMD,aAAa,KAAK6I,cAAL,CAAoB,IAApB,CAAb,CAAZ;EACA,aAAKmD,4BAAL,GAAoC/L,IAAIF,SAAJ,CAAc;EAAA,iBAChD,MAAKkM,SAAL,CAAe9K,MAAf,EAAuB;EACrB8I;EADqB,WAAvB,CADgD;EAAA,SAAd,CAApC;EAKD;EACF;EA3eH;EAAA;EAAA,kDA4egC;EAC5B,UAAI,KAAK+B,4BAAT,EAAuC;EACrC,aAAKA,4BAAL,CAAkCE,WAAlC;EACD;EACF;EACD;;;;;EAjfF;EAAA;EAAA,sCAqf6B;EAAA,UAAXtC,IAAW,uEAAJ,EAAI;;EACzB,WAAK3I,QAAL,GAAgB,CAAC,KAAKkL,iBAAL,EAAjB;EACA,UAAI,KAAKnB,OAAL,IAAgB,CAACpB,KAAKG,QAA1B,EAAoC;EAClC,aAAKiB,OAAL,CAAaK,eAAb,CAA6BzB,IAA7B;EACD;EACF;EACD;;;;;EA3fF;EAAA;EAAA,qCA+f4B;EAAA,UAAXA,IAAW,uEAAJ,EAAI;;EACxB,WAAKjJ,OAAL,GAAe,KAAKyL,mBAAL,EAAf;EACA,UAAI,KAAKpB,OAAL,IAAgB,CAACpB,KAAKG,QAA1B,EAAoC;EAClC,aAAKiB,OAAL,CAAaO,cAAb,CAA4B3B,IAA5B;EACD;EACF;EACD;;;;EArgBF;EAAA;EAAA,wCAwgBsB;EAClB,aAAO,KAAKiC,YAAL,CAAkB;EAAA,eAAWtJ,QAAQrB,KAAnB;EAAA,OAAlB,CAAP;EACD;EA1gBH;EAAA;EAAA,8CA2gB4B;EACxB,aAAO,KAAK2K,YAAL,CAAkB;EAAA,eAAW,CAACtJ,QAAQ0G,SAApB;EAAA,OAAlB,CAAP;EACD;EACD;;;;EA9gBF;EAAA;EAAA,0CAihBwB;EACpB,aAAO,KAAK4C,YAAL,CAAkB;EAAA,eAAWtJ,QAAQ5B,OAAnB;EAAA,OAAlB,CAAP;EACD;EACD;;;;;EAphBF;EAAA;EAAA,0CAwhBwBsJ,SAxhBxB,EAwhBmC;EAC/B,WAAK3I,MAAL,GAAc,KAAKuJ,gBAAL,EAAd;EACA,UAAIZ,SAAJ,EAAe;EACb,aAAKE,aAAL,CAAmB1K,IAAnB;EACA,aAAK2K,YAAL,CAAkB3K,IAAlB;EACD;EACD,UAAI,KAAKuL,OAAT,EAAkB;EAChB,aAAKA,OAAL,CAAaW,qBAAb,CAAmC1B,SAAnC;EACD;EACF;EAjiBH;EAAA;EAAA,uCAkiBqB;EACjB,WAAKC,YAAL,GAAoB,IAAImC,UAAJ,EAApB;EACA,WAAKlC,aAAL,GAAqB,IAAIkC,UAAJ,EAArB;EACA,WAAKjC,YAAL,GAAoB,IAAIiC,UAAJ,EAApB;EACD;EACD;EACA;;;;;EAxiBF;EAAA;EAAA,kCA4iBgBjN,EA5iBhB,EA4iBoB;EA5iBpB;EAAA;EAAA,mCA6iBiB;EA7iBjB;EAAA;EAAA,2CA8iByB;EA9iBzB;EAAA;EAAA,mCA+iBiB;EA/iBjB;EAAA;EAAA,0BAgjBQI,KAhjBR,EAgjBeuH,OAhjBf,EAgjBwB;EAhjBxB;EAAA;EAAA,+BAijBa;EAjjBb;EAAA;EAAA,iCAkjBe;EAljBf;EAAA;EAAA,gDAmjB8BvI,EAnjB9B,EAmjBkC;EAC9B,WAAK8N,mBAAL,GAA2B9N,EAA3B;EACD;EACD;;;;;EAtjBF;EAAA;EAAA,uCA0jBqBoL,IA1jBrB,EA0jB2B;EACvB,UAAI7B,aAAa6B,IAAb,KAAsBA,KAAK9G,QAAL,IAAiB,IAA3C,EAAiD;EAC/C,aAAKyJ,SAAL,GAAiB3C,KAAK9G,QAAtB;EACD;EACF;EA9jBH;EAAA;EAAA,2BAwCiB;EACb,aAAO,KAAKyJ,SAAL,GACH,KAAKA,SADF,GAEH,KAAKxB,MAAL,GACE,KAAKA,MAAL,CAAYjI,QADd,GAEE,QAJN;EAKD;EACD;;;;;;;;;EA/CF;EAAA;EAAA,2BAuDc;EACV,aAAO,CAAC,KAAK7B,QAAb;EACD;EACD;;;;;;;;EA1DF;EAAA;EAAA,2BAiEc;EACV,aAAO,KAAKK,MAAL,KAAgBgF,KAAvB;EACD;EACD;;;;;;;;EApEF;EAAA;EAAA,2BA2EgB;EACZ,aAAO,KAAKhF,MAAL,KAAgBiF,OAAvB;EACD;EACD;;;;;;;EA9EF;EAAA;EAAA,2BAoFgB;EACZ,aAAO,KAAKjF,MAAL,KAAgBkF,OAAvB;EACD;EACD;;;;;EAvFF;EAAA;EAAA,2BA2Fe;EACX,aAAO,KAAKwE,OAAZ;EACD;EACD;;;;;;EA9FF;EAAA;EAAA,2BAmGkB;EACd,aAAO,CAAC,KAAKrK,OAAb;EACD;EACD;;;;;;;;EAtGF;EAAA;EAAA,2BA6GgB;EACZ,aAAO,KAAKW,MAAL,KAAgBmF,QAAvB;EACD;EACD;;;;EAhHF;EAAA;EAAA,2BAmHiB;EACb,aAAO,KAAKnF,MAAL,KAAgBmF,QAAvB;EACD;EACD;;;;;EAtHF;EAAA;EAAA,2BA0Ha;EACT,UAAI+F,IAAI,IAAR;EACA,aAAOA,EAAExB,OAAT,EAAkB;EAChBwB,YAAIA,EAAExB,OAAN;EACD;EACD,aAAOwB,CAAP;EACD;EAhIH;EAAA;EAAA;AAgkBA,MAAaC,WAAb;EAAA;;EACE,uBAAYC,SAAZ,EAAuB1E,eAAvB,EAAwCa,cAAxC,EAAwD;EAAA;;EAAA,0HAEpDF,kBAAkBX,eAAlB,CAFoD,EAGpDY,uBAAuBC,cAAvB,EAAuCb,eAAvC,CAHoD;;EAKtD,WAAK0E,SAAL,GAAiBA,SAAjB;EACA,WAAKC,gBAAL,GAAwB3E,eAAxB;EACA,WAAK4E,eAAL,CAAqBF,SAArB;EACA,WAAKG,kBAAL,CAAwB7E,eAAxB;EACA,WAAKmB,cAAL,GAAsB,IAAtB;EACA,WAAKC,aAAL,GAAqB,KAArB;EACA,WAAKC,eAAL,GAAuB,KAAvB;EACA;;;EAGA,WAAKyD,MAAL,GAAc,KAAd;EACA,WAAKC,cAAL,GAAsB,IAAIV,UAAJ,EAAtB;EACA,WAAKW,aAAL,GAAqB,IAAIX,UAAJ,EAArB;EACA,WAAK7B,sBAAL,CAA4B;EAC1BT,gBAAU,IADgB;EAE1BE,iBAAW;EAFe,KAA5B;EAIA,WAAKgD,gBAAL;EACA;;;;;;;EAOA,WAAKjL,QAAL,GAAgB,iBAAS;EACvB,UAAMxC,QAAQkH,gBAAgBC,KAAhB,CAAd;EACA,UAAI,OAAK7D,QAAL,KAAkB,QAAtB,EAAgC;EAC9B,eAAKC,aAAL,GAAqBvD,KAArB;EACA,eAAK2J,cAAL,GAAsB,IAAtB;EACA,YAAI,CAAC,OAAKC,aAAV,EAAyB;EACvB,iBAAKA,aAAL,GAAqB,IAArB;EACD;EACD,eAAKgB,YAAL,CAAkB3K,IAAlB;EACD,OAPD,MAOO;EACL,YAAI,CAAC,OAAKyB,KAAV,EAAiB;EACf,iBAAKsK,WAAL;EACD;EACD,eAAK7B,QAAL,CAAcnK,KAAd;EACD;EACD,aAAKuN,cAAL,CAAoBtN,IAApB,CAAyBD,KAAzB;EACD,KAhBD;EAiBA;;;;EAIA,WAAKqC,MAAL,GAAc,YAAM;EAClB,aAAKiL,MAAL,GAAc,KAAd;EACA,UAAI,OAAKhK,QAAL,KAAkB,MAAtB,EAA8B;EAC5B,YAAI,CAAC,OAAK5B,KAAV,EAAiB;EACf,iBAAKsK,WAAL;EACD;EACD,YAAI,CAAC,OAAK7K,OAAV,EAAmB;EACjB,iBAAKsK,aAAL;EACD;EACD,eAAKtB,QAAL,CAAc,OAAK5G,aAAnB;EACD,OARD,MAQO,IAAI,OAAKD,QAAL,KAAkB,QAAtB,EAAgC;EACrC,eAAKuG,eAAL,GAAuB,IAAvB;EACA,eAAKD,aAAL,GAAqB,IAArB;EACD,OAHM,MAGA;EACL,YAAM8D,mBAAmB,CAAC,OAAKvM,OAA/B;EACA,YAAI,CAAC,OAAKO,KAAV,EAAiB;EACf,iBAAKsK,WAAL;EACD;EACD,YAAI,CAAC,OAAK7K,OAAV,EAAmB;EACjB,iBAAKsK,aAAL;EACD;EACD,YAAIiC,gBAAJ,EAAsB;EACpB,iBAAK9C,YAAL,CAAkB3K,IAAlB;EACD;EACF;EACD,aAAKuN,aAAL,CAAmBvN,IAAnB,CAAwB,OAAKsD,aAA7B;EACD,KA1BD;EA2BA;;;EAGA,WAAKjB,OAAL,GAAe,YAAM;EACnB,aAAKgL,MAAL,GAAc,IAAd;EACA,aAAK1C,YAAL,CAAkB3K,IAAlB;EACD,KAHD;EAIA;;;;;EAKA,WAAK0N,OAAL,GAAe,UAAC9K,SAAD,EAAY7C,KAAZ;EAAA,aAAsB8C,WAAWD,SAAX,EAAsB7C,KAAtB,SAAtB;EAAA,KAAf;EA1FsD;EA2FvD;EACD;;;;;;EA7FF;EAAA;;EAoGE;;;;EApGF,6BAwGWA,KAxGX,EAwGgC;EAAA,UAAduH,OAAc,uEAAJ,EAAI;;EAC5B,WAAKvH,KAAL,GAAa,KAAKuD,aAAL,GAAqBvD,KAAlC;EACA,WAAKgL,sBAAL,CAA4BzD,OAA5B;EACD;EACD;;;;;;;;;;;EA5GF;EAAA;EAAA,+BAsHavH,KAtHb,EAsHkC;EAAA,UAAduH,OAAc,uEAAJ,EAAI;;EAC9B,WAAK4C,QAAL,CAAcnK,KAAd,EAAqBuH,OAArB;EACD;;EAED;;;;;EA1HF;EAAA;EAAA,4BA8HwC;EAAA,UAAhC2F,SAAgC,uEAApB,IAAoB;EAAA,UAAd3F,OAAc,uEAAJ,EAAI;;EACpC,WAAK6F,eAAL,CAAqBF,SAArB;EACA,WAAKtB,cAAL,CAAoBrE,OAApB;EACA,WAAKuE,eAAL,CAAqBvE,OAArB;EACA,WAAK4C,QAAL,CAAc,KAAKnK,KAAnB,EAA0BuH,OAA1B;EACA,WAAKoC,cAAL,GAAsB,KAAtB;EACD;EACD;;;;;EArIF;EAAA;EAAA,iCAyIejG,SAzIf,EAyI0B;EACtB,aAAO,KAAP;EACD;EACD;;;;EA5IF;EAAA;EAAA,2CA+IyB;EACrB,aAAO,KAAKrC,QAAZ;EACD;EACD;;;;EAlJF;EAAA;EAAA,kCAqJgB6L,SArJhB,EAqJ2B;EACvB,aACE,QAAOA,SAAP,yCAAOA,SAAP,OAAqB,QAArB,IACAA,cAAc,IADd,IAEAhK,OAAOC,IAAP,CAAY+J,SAAZ,EAAuB1I,MAAvB,KAAkC,CAFlC,IAGA,WAAW0I,SAHX,IAIA,cAAcA,SALhB;EAOD;EA7JH;EAAA;EAAA,oCA8JkBA,SA9JlB,EA8J6B;EACzB,UAAI,KAAKU,aAAL,CAAmBV,SAAnB,CAAJ,EAAmC;EACjC,aAAKlN,KAAL,GAAa,KAAKuD,aAAL,GAAqB2J,UAAUlN,KAA5C;EACA,YAAIkN,UAAU7L,QAAd,EAAwB;EACtB,eAAKiJ,OAAL,CAAa;EACXC,sBAAU,IADC;EAEXE,uBAAW;EAFA,WAAb;EAID,SALD,MAKO;EACL,eAAKM,MAAL,CAAY;EACVR,sBAAU,IADA;EAEVE,uBAAW;EAFD,WAAZ;EAID;EACF,OAbD,MAaO;EACL,aAAKzK,KAAL,GAAa,KAAKuD,aAAL,GAAqB2J,SAAlC;EACD;EACF;EA/KH;EAAA;EAAA,2CAgLyB;EACrB,UAAI,KAAK5J,QAAL,KAAkB,QAAtB,EAAgC;EAC9B,YAAI,KAAKsG,aAAT,EAAwB,KAAKoC,WAAL;EACxB,YAAI,KAAKnC,eAAT,EAA0B,KAAK4B,aAAL;EAC1B,YAAI,KAAK9B,cAAT,EAAyB;EACvB,eAAKQ,QAAL,CAAc,KAAK5G,aAAnB;EACA,eAAKoG,cAAL,GAAsB,KAAtB;EACA,iBAAO,IAAP;EACD;EACF;EACD,aAAO,KAAP;EACD;EA3LH;EAAA;EAAA,2BAiGiB;EACb,aAAO,CAAC,KAAK2D,MAAb;EACD;EAnGH;EAAA;EAAA,EAAiC9D,eAAjC;AA6LA,MAAarB,SAAb;EAAA;;EACE,qBAAYC,QAAZ,EAAsBI,eAAtB,EAAuCa,cAAvC,EAAuD;EAAA;;EAAA,sHAEnDF,kBAAkBX,eAAlB,CAFmD,EAGnDY,uBAAuBC,cAAvB,EAAuCb,eAAvC,CAHmD;;EAKrD,WAAKJ,QAAL,GAAgBA,QAAhB;EACA,WAAKI,eAAL,GAAuBA,eAAvB;EACA,WAAKiF,gBAAL;EACA,WAAKJ,kBAAL,CAAwB7E,eAAxB;EACA,WAAKqF,cAAL;EACA,WAAK7C,sBAAL,CAA4B;EAC1BT,gBAAU,IADgB;EAE1BE,iBAAW;EAFe,KAA5B;EAIA,WAAKqD,YAAL,GAAoB,aAAK;EACvB,UAAIC,CAAJ,EAAO;EACLA,UAAE9M,cAAF;EACD;EACD,UAAI,OAAK+M,uBAAL,EAAJ,EAAoC;EAClC,eAAKtC,eAAL,CAAqB;EACnBjB,qBAAW;EADQ,SAArB;EAGD;EACD,UAAI,CAAC,OAAKwD,oBAAL,EAAL,EAAkC;EAChC,eAAKjD,sBAAL;EACD;EACF,KAZD;EAdqD;EA2BtD;EACD;;;;;;;;;;EA7BF;EAAA;EAAA,6BAqCWkD,WArCX,EAqCwB;EACpB,aACE,KAAK9F,QAAL,CAAc+F,cAAd,CAA6BD,WAA7B,KACA,KAAK9F,QAAL,CAAc8F,WAAd,EAA2B5M,OAF7B;EAID;EACD;;;;;;;;;;EA3CF;EAAA;EAAA,oCAoDkB4G,IApDlB,EAoDwBnF,OApDxB,EAoDiC;EAC7B,UAAI,KAAKqF,QAAL,CAAcF,IAAd,CAAJ,EAAyB,OAAO,KAAKE,QAAL,CAAcF,IAAd,CAAP;EACzB,WAAKE,QAAL,CAAcF,IAAd,IAAsBnF,OAAtB;EACAA,cAAQqL,SAAR,CAAkB,IAAlB;EACArL,cAAQsL,2BAAR,CAAoC,KAAKvB,mBAAzC;EACA,aAAO/J,OAAP;EACD;;EAED;;;;;;;EA5DF;EAAA;EAAA,+BAkEamF,IAlEb,EAkEmBnF,OAlEnB,EAkE4B;EACxB,WAAKuL,eAAL,CAAqBpG,IAArB,EAA2BnF,OAA3B;EACA,WAAKiI,sBAAL;EACA,WAAK8B,mBAAL;EACD;;EAED;;;;;;EAxEF;EAAA;EAAA,kCA6EgB5E,IA7EhB,EA6EsB;EAClB,UAAI,KAAKE,QAAL,CAAcF,IAAd,CAAJ,EACE,KAAKE,QAAL,CAAcF,IAAd,EAAoBmG,2BAApB,CAAgD,YAAM,EAAtD;EACF,aAAO,KAAKjG,QAAL,CAAcF,IAAd,CAAP;EACA,WAAK8C,sBAAL;EACA,WAAK8B,mBAAL;EACD;;EAED;;;;;;;EArFF;EAAA;EAAA,+BA2Fa5E,IA3Fb,EA2FmBnF,OA3FnB,EA2F4B;EACxB,UAAI,KAAKqF,QAAL,CAAcF,IAAd,CAAJ,EACE,KAAKE,QAAL,CAAcF,IAAd,EAAoBmG,2BAApB,CAAgD,YAAM,EAAtD;EACF,aAAO,KAAKjG,QAAL,CAAcF,IAAd,CAAP;EACA,UAAInF,OAAJ,EAAa,KAAKuL,eAAL,CAAqBpG,IAArB,EAA2BnF,OAA3B;EACb,WAAKiI,sBAAL;EACA,WAAK8B,mBAAL;EACD;EACD;;;;;;;;;;;;;;;;EAnGF;EAAA;EAAA,6BAkHW9M,KAlHX,EAkHgC;EAAA;;EAAA,UAAduH,OAAc,uEAAJ,EAAI;;EAC5B,WAAKgH,sBAAL,CAA4BvO,KAA5B;EACAkD,aAAOC,IAAP,CAAYnD,KAAZ,EAAmBR,OAAnB,CAA2B,gBAAQ;EACjC,eAAKgP,sBAAL,CAA4BtG,IAA5B;EACA,eAAKE,QAAL,CAAcF,IAAd,EAAoBiC,QAApB,CAA6BnK,MAAMkI,IAAN,CAA7B,EAA0C;EACxCqC,oBAAU,IAD8B;EAExCE,qBAAWlD,QAAQkD;EAFqB,SAA1C;EAID,OAND;EAOA,WAAKO,sBAAL,CAA4BzD,OAA5B;EACD;EACD;;;;;;;EA7HF;EAAA;EAAA,4BAmIkC;EAAA,UAA1BvH,KAA0B,uEAAlB,EAAkB;EAAA,UAAduH,OAAc,uEAAJ,EAAI;;EAC9B,WAAK8C,aAAL,CAAmB,UAACtH,OAAD,EAAUmF,IAAV,EAAmB;EACpCnF,gBAAQiH,KAAR,CAAchK,MAAMkI,IAAN,CAAd,EAA2B;EACzBqC,oBAAU,IADe;EAEzBE,qBAAWlD,QAAQkD;EAFM,SAA3B;EAID,OALD;EAMA,WAAKO,sBAAL,CAA4BzD,OAA5B;EACA,WAAKoE,iBAAL;EACA,WAAKE,eAAL,CAAqBtE,OAArB;EACA,WAAKwE,cAAL,CAAoBxE,OAApB;EACD;EACD;;;;;;;;;;;;;;;;;;;;EA/IF;EAAA;EAAA,+BAkKavH,KAlKb,EAkKkC;EAAA;;EAAA,UAAduH,OAAc,uEAAJ,EAAI;;EAC9BrE,aAAOC,IAAP,CAAYnD,KAAZ,EAAmBR,OAAnB,CAA2B,gBAAQ;EACjC,YAAI,OAAK4I,QAAL,CAAcF,IAAd,CAAJ,EAAyB;EACvB,iBAAKE,QAAL,CAAcF,IAAd,EAAoBgC,UAApB,CAA+BlK,MAAMkI,IAAN,CAA/B,EAA4C;EAC1CqC,sBAAU,IADgC;EAE1CE,uBAAWlD,QAAQkD;EAFuB,WAA5C;EAID;EACF,OAPD;EAQA,WAAKO,sBAAL,CAA4BzD,OAA5B;EACD;EACD;;;;;;;EA7KF;EAAA;EAAA,kCAmLgB;EACZ,aAAO,KAAKkH,eAAL,CAAqB,EAArB,EAAyB,UAACC,GAAD,EAAM3L,OAAN,EAAemF,IAAf,EAAwB;EACtDwG,YAAIxG,IAAJ,IACEnF,mBAAmBkK,WAAnB,GAAiClK,QAAQ/C,KAAzC,GAAiD+C,QAAQ4L,WAAR,EADnD;EAEA,eAAOD,GAAP;EACD,OAJM,CAAP;EAKD;EACD;;;;;EA1LF;EAAA;EAAA,kCA8LgBE,QA9LhB,EA8L0B;EAAA;;EACtB1L,aAAOC,IAAP,CAAY,KAAKiF,QAAjB,EAA2B5I,OAA3B,CAAmC;EAAA,eAAKoP,SAAS,OAAKxG,QAAL,CAAcyG,CAAd,CAAT,EAA2BA,CAA3B,CAAL;EAAA,OAAnC;EACD;EAhMH;EAAA;EAAA,0CAkMwB;EACtB;;;;;EAnMF;EAAA;EAAA,iCAuMenL,SAvMf,EAuM0B;EAAA;;EACtB,UAAIkB,MAAM,KAAV;EACA,WAAKyF,aAAL,CAAmB,UAACtH,OAAD,EAAUmF,IAAV,EAAmB;EACpCtD,cAAMA,OAAQ,OAAKkK,QAAL,CAAc5G,IAAd,KAAuBxE,UAAUX,OAAV,CAArC;EACD,OAFD;EAGA,aAAO6B,GAAP;EACD;EA7MH;EAAA;EAAA,mCA8MiB;EACb,WAAK5E,KAAL,GAAa,KAAK+O,YAAL,EAAb;EACD;EAhNH;EAAA;EAAA,mCAiNiB;EAAA;;EACb,aAAO,KAAKN,eAAL,CAAqB,EAArB,EAAyB,UAACC,GAAD,EAAM3L,OAAN,EAAemF,IAAf,EAAwB;EACtD,YAAInF,QAAQzB,OAAR,IAAmB,OAAKD,QAA5B,EAAsC;EACpCqN,cAAIxG,IAAJ,IAAYnF,QAAQ/C,KAApB;EACD;EACD,eAAO0O,GAAP;EACD,OALM,CAAP;EAMD;EAxNH;EAAA;EAAA,oCAyNkB;EAAA;;EACd,aAAO,KAAKD,eAAL,CAAqB,EAArB,EAAyB,UAACC,GAAD,EAAM3L,OAAN,EAAemF,IAAf,EAAwB;EACtD,YAAInF,QAAQzB,OAAR,IAAmB,OAAKD,QAA5B,EAAsC;EACpCqN,cAAIxG,IAAJ,IAAYnF,QAAQpB,MAApB;EACD;EACD,eAAO+M,GAAP;EACD,OALM,CAAP;EAMD;EACD;;;;EAjOF;EAAA;EAAA,oCAoOkBM,SApOlB,EAoO6BhQ,EApO7B,EAoOiC;EAC7B,UAAI4F,MAAMoK,SAAV;EACA,WAAK3E,aAAL,CAAmB,UAACtH,OAAD,EAAUmF,IAAV,EAAmB;EACpCtD,cAAM5F,GAAG4F,GAAH,EAAQ7B,OAAR,EAAiBmF,IAAjB,CAAN;EACD,OAFD;EAGA,aAAOtD,GAAP;EACD;EA1OH;EAAA;EAAA,qCA2OmB;EAAA;;EACf,WAAKyF,aAAL,CAAmB,mBAAW;EAC5BtH,gBAAQqL,SAAR,CAAkB,OAAlB;EACArL,gBAAQsL,2BAAR,CAAoC,QAAKvB,mBAAzC;EACD,OAHD;EAID;EACD;;;;EAjPF;EAAA;EAAA,2CAoPyB;EAAA;EAAA;EAAA;;EAAA;EACrB,6BAA0B5J,OAAOC,IAAP,CAAY,KAAKiF,QAAjB,CAA1B,8HAAsD;EAAA,cAA3C8F,WAA2C;;EACpD,cAAI,KAAK9F,QAAL,CAAc8F,WAAd,EAA2B5M,OAA/B,EAAwC;EACtC,mBAAO,KAAP;EACD;EACF;EALoB;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAMrB,aAAO4B,OAAOC,IAAP,CAAY,KAAKiF,QAAjB,EAA2B5D,MAA3B,GAAoC,CAApC,IAAyC,KAAKnD,QAArD;EACD;EA3PH;EAAA;EAAA,2CA4PyBrB,KA5PzB,EA4PgC;EAC5B,WAAKqK,aAAL,CAAmB,UAACtH,OAAD,EAAUmF,IAAV,EAAmB;EACpC,YAAIlI,MAAMkI,IAAN,MAAgBvF,SAApB,EAA+B;EAC7B,gBAAM,IAAIjC,KAAJ,uDACgDwH,IADhD,QAAN;EAGD;EACF,OAND;EAOD;EApQH;EAAA;EAAA,2CAqQyBA,IArQzB,EAqQ+B;EAC3B,UAAI,CAAChF,OAAOC,IAAP,CAAY,KAAKiF,QAAjB,EAA2B5D,MAAhC,EAAwC;EACtC,cAAM,IAAI9D,KAAJ,gFAAN;EAGD;EACD,UAAI,CAAC,KAAK0H,QAAL,CAAcF,IAAd,CAAL,EAA0B;EACxB,cAAM,IAAIxH,KAAJ,0CAAiDwH,IAAjD,OAAN;EACD;EACF;EA9QH;EAAA;EAAA,2CA+QyB;EACrB,UAAI+G,iBAAiB,KAAKR,eAAL,CAAqB,KAArB,EAA4B,UAACS,OAAD,EAAUC,KAAV,EAAoB;EACnE,eAAOA,MAAMlB,oBAAN,KAA+B,IAA/B,GAAsCiB,OAA7C;EACD,OAFoB,CAArB;EAGA,UAAID,cAAJ,EAAoB,KAAKjE,sBAAL;EACpB,aAAOiE,cAAP;EACD;EArRH;EAAA;EAAA,EAA+BzF,eAA/B;AAuRA,MAAanB,SAAb;EAAA;;EACE,qBAAYD,QAAZ,EAAsBI,eAAtB,EAAuCa,cAAvC,EAAuD;EAAA;;EAAA,uHAEnDF,kBAAkBX,eAAlB,CAFmD,EAGnDY,uBAAuBC,cAAvB,EAAuCb,eAAvC,CAHmD;;EAKrD,YAAKJ,QAAL,GAAgBA,QAAhB;EACA,YAAKI,eAAL,GAAuBA,eAAvB;EACA,YAAKiF,gBAAL;EACA,YAAKJ,kBAAL,CAAwB7E,eAAxB;EACA,YAAKqF,cAAL;EACA,YAAK7C,sBAAL,CAA4B;EAC1BT,gBAAU,IADgB;EAE1BE,iBAAW;EAFe,KAA5B;EAIA,YAAKqD,YAAL,GAAoB,aAAK;EACvB,UAAIC,CAAJ,EAAO;EACLA,UAAE9M,cAAF;EACD;EACD,UAAI,QAAK+M,uBAAL,EAAJ,EAAoC;EAClC,gBAAKtC,eAAL,CAAqB;EACnBjB,qBAAW;EADQ,SAArB;EAGD;EACD,UAAI,CAAC,QAAKwD,oBAAL,EAAL,EAAkC;EAChC,gBAAKjD,sBAAL;EACD;EACF,KAZD;EAdqD;EA2BtD;EACD;;;;;;;EA7BF;EAAA;EAAA,uBAkCKoE,KAlCL,EAkCY;EACR,aAAO,KAAKhH,QAAL,CAAcgH,KAAd,CAAP;EACD;;EAED;;;;;;EAtCF;EAAA;EAAA,yBA2COrM,OA3CP,EA2CgB;EACZ,WAAKqF,QAAL,CAAcnJ,IAAd,CAAmB8D,OAAnB;EACA,WAAKsM,gBAAL,CAAsBtM,OAAtB;EACA,WAAKiI,sBAAL;EACA,WAAK8B,mBAAL;EACD;;EAED;;;;;;EAlDF;EAAA;EAAA,2BAuDSsC,KAvDT,EAuDgBrM,OAvDhB,EAuDyB;EACrB,WAAKqF,QAAL,CAAckH,MAAd,CAAqBF,KAArB,EAA4B,CAA5B,EAA+BrM,OAA/B;EACA,WAAKsM,gBAAL,CAAsBtM,OAAtB;EACA,WAAKiI,sBAAL;EACA,WAAK8B,mBAAL;EACD;;EAED;;;;;EA9DF;EAAA;EAAA,6BAkEWsC,KAlEX,EAkEkB;EACd,UAAI,KAAKhH,QAAL,CAAcgH,KAAd,CAAJ,EACE,KAAKhH,QAAL,CAAcgH,KAAd,EAAqBf,2BAArB,CAAiD,YAAM,EAAvD;EACF,WAAKjG,QAAL,CAAckH,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;EACA,WAAKpE,sBAAL;EACA,WAAK8B,mBAAL;EACD;;EAED;;;;;;EA1EF;EAAA;EAAA,+BA+EasC,KA/Eb,EA+EoBrM,OA/EpB,EA+E6B;EACzB,UAAI,KAAKqF,QAAL,CAAcgH,KAAd,CAAJ,EACE,KAAKhH,QAAL,CAAcgH,KAAd,EAAqBf,2BAArB,CAAiD,YAAM,EAAvD;EACF,WAAKjG,QAAL,CAAckH,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;;EAEA,UAAIrM,OAAJ,EAAa;EACX,aAAKqF,QAAL,CAAckH,MAAd,CAAqBF,KAArB,EAA4B,CAA5B,EAA+BrM,OAA/B;EACA,aAAKsM,gBAAL,CAAsBtM,OAAtB;EACD;;EAED,WAAKiI,sBAAL;EACA,WAAK8B,mBAAL;EACD;;EAED;;;;;EA7FF;EAAA;;;EAqGE;;;;;;EArGF,6BA2GW9M,KA3GX,EA2GgC;EAAA;;EAAA,UAAduH,OAAc,uEAAJ,EAAI;;EAC5B,WAAKgH,sBAAL,CAA4BvO,KAA5B;EACAA,YAAMR,OAAN,CAAc,UAAC+P,QAAD,EAAWH,KAAX,EAAqB;EACjC,gBAAKZ,sBAAL,CAA4BY,KAA5B;EACA,gBAAK9G,EAAL,CAAQ8G,KAAR,EAAejF,QAAf,CAAwBoF,QAAxB,EAAkC;EAChChF,oBAAU,IADsB;EAEhCE,qBAAWlD,QAAQkD;EAFa,SAAlC;EAID,OAND;EAOA,WAAKO,sBAAL,CAA4BzD,OAA5B;EACD;;EAED;;;;;;;;EAvHF;EAAA;EAAA,+BA8HavH,KA9Hb,EA8HkC;EAAA;;EAAA,UAAduH,OAAc,uEAAJ,EAAI;;EAC9BvH,YAAMR,OAAN,CAAc,UAAC+P,QAAD,EAAWH,KAAX,EAAqB;EACjC,YAAI,QAAK9G,EAAL,CAAQ8G,KAAR,CAAJ,EAAoB;EAClB,kBAAK9G,EAAL,CAAQ8G,KAAR,EAAelF,UAAf,CAA0BqF,QAA1B,EAAoC;EAClChF,sBAAU,IADwB;EAElCE,uBAAWlD,QAAQkD;EAFe,WAApC;EAID;EACF,OAPD;EAQA,WAAKO,sBAAL,CAA4BzD,OAA5B;EACD;;EAED;;;;;;EA1IF;EAAA;EAAA,4BA+IkC;EAAA,UAA1BvH,KAA0B,uEAAlB,EAAkB;EAAA,UAAduH,OAAc,uEAAJ,EAAI;;EAC9B,WAAK8C,aAAL,CAAmB,UAACtH,OAAD,EAAUqM,KAAV,EAAoB;EACrCrM,gBAAQiH,KAAR,CAAchK,MAAMoP,KAAN,CAAd,EAA4B;EAC1B7E,oBAAU,IADgB;EAE1BE,qBAAWlD,QAAQkD;EAFO,SAA5B;EAID,OALD;EAMA,WAAKO,sBAAL,CAA4BzD,OAA5B;EACA,WAAKoE,iBAAL;EACA,WAAKE,eAAL,CAAqBtE,OAArB;EACA,WAAKwE,cAAL,CAAoBxE,OAApB;EACD;;EAED;;;;;;;;EA5JF;EAAA;EAAA,kCAmKgB;EACZ,aAAO,KAAKa,QAAL,CAAcnD,GAAd,CAAkB,mBAAW;EAClC,eAAOlC,mBAAmBkK,WAAnB,GACHlK,QAAQ/C,KADL,GAEH+C,QAAQ4L,WAAR,EAFJ;EAGD,OAJM,CAAP;EAKD;EAzKH;EAAA;EAAA,2CA2KyB;EACrB,UAAIM,iBAAiB,KAAK7G,QAAL,CAAcvD,MAAd,CAAqB,UAACqK,OAAD,EAAUC,KAAV,EAAoB;EAC5D,eAAOA,MAAMlB,oBAAN,KAA+B,IAA/B,GAAsCiB,OAA7C;EACD,OAFoB,EAElB,KAFkB,CAArB;EAGA,UAAID,cAAJ,EAAoB,KAAKjE,sBAAL;EACpB,aAAOiE,cAAP;EACD;EAjLH;EAAA;EAAA,2CAmLyBG,KAnLzB,EAmLgC;EAC5B,UAAI,CAAC,KAAKhH,QAAL,CAAc5D,MAAnB,EAA2B;EACzB,cAAM,IAAI9D,KAAJ,gFAAN;EAGD;EACD,UAAI,CAAC,KAAK4H,EAAL,CAAQ8G,KAAR,CAAL,EAAqB;EACnB,cAAM,IAAI1O,KAAJ,wCAA+C0O,KAA/C,CAAN;EACD;EACF;EA5LH;EAAA;EAAA,kCA8LgBxP,EA9LhB,EA8LoB;EAChB,WAAKwI,QAAL,CAAc5I,OAAd,CAAsB,UAACuD,OAAD,EAAUqM,KAAV,EAAoB;EACxCxP,WAAGmD,OAAH,EAAYqM,KAAZ;EACD,OAFD;EAGD;EAlMH;EAAA;EAAA,mCAoMiB;EAAA;;EACb,WAAKpP,KAAL,GAAa,KAAKoI,QAAL,CACVlJ,MADU,CACH;EAAA,eAAW6D,QAAQzB,OAAR,IAAmB,QAAKD,QAAnC;EAAA,OADG,EAEV4D,GAFU,CAEN;EAAA,eAAWlC,QAAQ/C,KAAnB;EAAA,OAFM,CAAb;EAGD;EAxMH;EAAA;EAAA,iCA0Me0D,SA1Mf,EA0M0B;EACtB,aAAO,KAAK0E,QAAL,CAAcoH,IAAd,CAAmB;EAAA,eAAWzM,QAAQzB,OAAR,IAAmBoC,UAAUX,OAAV,CAA9B;EAAA,OAAnB,CAAP;EACD;EA5MH;EAAA;EAAA,qCA8MmB;EAAA;;EACf,WAAKsH,aAAL,CAAmB;EAAA,eAAW,QAAKgF,gBAAL,CAAsBtM,OAAtB,CAAX;EAAA,OAAnB;EACD;EAhNH;EAAA;EAAA,2CAkNyB/C,KAlNzB,EAkNgC;EAC5B,WAAKqK,aAAL,CAAmB,UAACtH,OAAD,EAAUyE,CAAV,EAAgB;EACjC,YAAIxH,MAAMwH,CAAN,MAAa7E,SAAjB,EAA4B;EAC1B,gBAAM,IAAIjC,KAAJ,qDAA4D8G,CAA5D,OAAN;EACD;EACF,OAJD;EAKD;EAxNH;EAAA;EAAA,2CA0NyB;EAAA;EAAA;EAAA;;EAAA;EACrB,8BAAsB,KAAKY,QAA3B,mIAAqC;EAAA,cAA1BrF,OAA0B;;EACnC,cAAIA,QAAQzB,OAAZ,EAAqB,OAAO,KAAP;EACtB;EAHoB;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAIrB,aAAO,KAAK8G,QAAL,CAAc5D,MAAd,GAAuB,CAAvB,IAA4B,KAAKnD,QAAxC;EACD;EA/NH;EAAA;EAAA,qCAiOmB0B,OAjOnB,EAiO4B;EACxBA,cAAQqL,SAAR,CAAkB,IAAlB;EACArL,cAAQsL,2BAAR,CAAoC,KAAKvB,mBAAzC;EACD;EApOH;EAAA;EAAA,0CAsOwB;EAtOxB;EAAA;EAAA,2BAiGe;EACX,aAAO,KAAK1E,QAAL,CAAc5D,MAArB;EACD;EAnGH;EAAA;EAAA,EAA+BgF,eAA/B;;EC3qCA,SAASiG,cAAT,CAAwBC,aAAxB,EAAuC;EACrC,MACEA,yBAAyBzC,WAAzB,IACAyC,yBAAyBvH,SADzB,IAEAuH,yBAAyBrH,SAH3B,EAIE;EACA,WAAOqH,aAAP;EACD,GAND,MAMO,IAAI1H,MAAMS,OAAN,CAAciH,aAAd,CAAJ,EAAkC;EACvC,QAAM1P,QAAQ0P,cAAc,CAAd,CAAd;EACA,QAAM/G,YAAY+G,cAAclL,MAAd,GAAuB,CAAvB,GAA2BkL,cAAc,CAAd,CAA3B,GAA8C,IAAhE;EACA,QAAMrG,iBAAiBqG,cAAclL,MAAd,GAAuB,CAAvB,GAA2BkL,cAAc,CAAd,CAA3B,GAA8C,IAArE;EACA,QAAMpM,WAAWoM,cAAclL,MAAd,GAAuB,CAAvB,GAA2BkL,cAAc,CAAd,CAA3B,GAA8C,IAA/D;EACA,WAAOC,YAAY5M,OAAZ,CAAoB/C,KAApB,EAA2B2I,SAA3B,EAAsCU,cAAtC,EAAsD/F,QAAtD,CAAP;EACD;EACD,SAAOqM,YAAY5M,OAAZ,CAAoB2M,aAApB,CAAP;EACD;EACD,SAASE,eAAT,CAAyBC,cAAzB,EAAyC;EACvC,MAAMzH,WAAW,EAAjB;EACAlF,SAAOC,IAAP,CAAY0M,cAAZ,EAA4BrQ,OAA5B,CAAoC,uBAAe;EACjD4I,aAAS8F,WAAT,IAAwBuB,eAAeI,eAAe3B,WAAf,CAAf,CAAxB;EACD,GAFD;EAGA,SAAO9F,QAAP;EACD;;MACoBuH;;;;;;;;EACnB;;;;;;;4BAOaE,gBAAgBC,OAAO;EAClC,UAAM1H,WAAWwH,gBAAgBC,cAAhB,CAAjB;EACA,UAAM7K,aAAa8K,SAAS,IAAT,GAAgBA,MAAM9K,UAAtB,GAAmC,IAAtD;EACA,UAAMuE,kBAAkBuG,SAAS,IAAT,GAAgBA,MAAMvG,eAAtB,GAAwC,IAAhE;EACA,UAAMjG,WAAWwM,SAAS,IAAT,GAAgBA,MAAMxM,QAAtB,GAAiC,IAAlD;EACA,aAAO,IAAI6E,SAAJ,CAAcC,QAAd,EAAwB,EAAEpD,sBAAF,EAAcuE,gCAAd,EAA+BjG,kBAA/B,EAAxB,CAAP;EACD;EACD;;;;;;;4BAIauM,gBAAgBC,OAAO;EAClC,UAAM1H,WAAWyH,eAAe5K,GAAf,CAAmB;EAAA,eAAKwK,eAAe5G,CAAf,CAAL;EAAA,OAAnB,CAAjB;EACA,UAAM7D,aAAa8K,SAAS,IAAT,GAAgBA,MAAM9K,UAAtB,GAAmC,IAAtD;EACA,UAAMuE,kBAAkBuG,SAAS,IAAT,GAAgBA,MAAMvG,eAAtB,GAAwC,IAAhE;EACA,UAAMjG,WAAWwM,SAAS,IAAT,GAAgBA,MAAMxM,QAAtB,GAAiC,IAAlD;EACA,aAAO,IAAI+E,SAAJ,CAAcD,QAAd,EAAwB,EAAEpD,sBAAF,EAAcuE,gCAAd,EAA+BjG,kBAA/B,EAAxB,CAAP;EACD;;EAED;;;;;;;;;;;;;;8BAWe4J,WAAWlI,YAAYuE,iBAAiBjG,UAAU;EAC/D,aAAO,IAAI2J,WAAJ,CAAgBC,SAAhB,EAA2B,EAAElI,sBAAF,EAAcuE,gCAAd,EAA+BjG,kBAA/B,EAA3B,CAAP;EACD;;;;;MC5DkByM;;;;;;;;;;0CACC;EAAA,UACVhN,OADU,GACE,KAAKoB,KADP,CACVpB,OADU;EAElB;;EACA,WAAKiN,WAAL,CAAiBjN,OAAjB;EACD;;;gDACyBkN,WAAW;EAAA,UAC3BlN,OAD2B,GACfkN,SADe,CAC3BlN,OAD2B;;EAEnC,UAAI,KAAKoB,KAAL,CAAWpB,OAAX,KAAuBA,OAA3B,EAAoC;EAClC,aAAKmN,cAAL,CAAoBnN,OAApB;EACA,aAAKiN,WAAL,CAAiBjN,OAAjB;EACD;EACF;;;kCACWA,SAAS;EAAA;;EACnB,UAAIA,OAAJ,EAAa;EACXA,gBAAQ6H,YAAR,CAAqBrK,SAArB,CAA+B,YAAM;EACnC,iBAAK4P,WAAL;EACD,SAFD;EAGD;EACF;;;qCACcpN,SAAS;EACtB,UAAIA,OAAJ,EAAa;EACX,YAAIA,QAAQ6H,YAAR,CAAqB7L,SAAzB,EAAoC;EAClCgE,kBAAQ6H,YAAR,CAAqB7L,SAArB,CAA+BS,OAA/B,CAAuC,oBAAY;EACjDuD,oBAAQ6H,YAAR,CAAqB8B,WAArB,CAAiC0D,QAAjC;EACD,WAFD;EAGD;EACF;EACF;;;6CACsB;EAAA,UACbrN,OADa,GACD,KAAKoB,KADJ,CACbpB,OADa;EAErB;;EACA,WAAKmN,cAAL,CAAoBnN,OAApB;EACD;;;4CACqBoB,OAAO;EAC3B,UAAI,CAACA,MAAMkM,MAAX,EAAmB;EACjB,eAAO,IAAP;EACD;EACD,aAAO,KAAP;EACD;;;qCACc;EAAA,mBACyB,KAAKlM,KAD9B;EAAA,UACLmM,MADK,UACLA,MADK;EAAA,UACGC,QADH,UACGA,QADH;EAAA,UACaxN,OADb,UACaA,OADb;;EAEbU,cACEV,OADF;EAIA,UAAIA,OAAJ,EAAa;EACX;EACA,YAAI1C,WAAWkQ,QAAX,CAAJ,EAA0B;EACxB,iBAAOA,SAASxN,OAAT,CAAP;EACD;EACD;EACA,YAAI1C,WAAWiQ,MAAX,CAAJ,EAAwB;EACtB,iBAAOA,OAAOvN,OAAP,CAAP;EACD;EACD,eAAO,IAAP;EACD;EACD,aAAO,IAAP;EACD;;;+BACQ;EACP,aAAO,KAAKyN,YAAL,EAAP;EACD;;;IA7DgCC,MAAMC;;;EAgEzCX,MAAMY,YAAN,GAAqB;EACnBN,UAAQ;EADW,CAArB;;EAIAN,MAAMa,SAAN,GAAkB;EAChBP,UAAQQ,UAAUC,IADF;EAEhB/N,WAAS8N,UAAUE,SAAV,CAAoB,CAC3BF,UAAUG,UAAV,CAAqB/D,WAArB,CAD2B,EAE3B4D,UAAUG,UAAV,CAAqB3I,SAArB,CAF2B,EAG3BwI,UAAUG,UAAV,CAAqB7I,SAArB,CAH2B,CAApB,EAIN8I,UANa;EAOhBX,UAAQO,UAAUK;EAPF,CAAlB;;ECtEA,IAAMC,0BAA0B,SAA1BA,uBAA0B,CAACC,SAAD,EAAY7J,OAAZ,EAAqB2F,SAArB,EAAmC;EACjE,UAAQkE,SAAR;EACE,SAAK,WAAL;EACE,aAAO,IAAIjJ,SAAJ,CAAc,EAAd,EAAkBZ,OAAlB,CAAP;EACF,SAAK,WAAL;EACE,aAAO,IAAIc,SAAJ,CAAc,EAAd,EAAkBd,OAAlB,CAAP;EACF,SAAK,aAAL;EACE,aAAO,IAAI0F,WAAJ,CAAgBC,SAAhB,EAA2B3F,OAA3B,CAAP;EACF;EACE,aAAO,IAAP;EARJ;EAUD,CAXD;EAYA,IAAM8J,mBAAmB,SAAnBA,gBAAmB,CAAClN,KAAD,EAAQmN,OAAR,EAAiBF,SAAjB,EAA+B;EAAA,MAC9ClJ,IAD8C,GACa/D,KADb,CAC9C+D,IAD8C;EAAA,MACxCqD,MADwC,GACapH,KADb,CACxCoH,MADwC;EAAA,MAChChE,OADgC,GACapD,KADb,CAChCoD,OADgC;EAAA,MACvB6H,KADuB,GACajL,KADb,CACvBiL,KADuB;EAAA,MAChBrM,OADgB,GACaoB,KADb,CAChBpB,OADgB;EAAA,MACPmK,SADO,GACa/I,KADb,CACP+I,SADO;EAAA,MACIxD,IADJ,GACavF,KADb,CACIuF,IADJ;;EAEtD,MAAM6H,gBAAgBhG,UAAU+F,QAAQC,aAAxC;EACA,MAAIC,gBAAgB,IAApB;EACA,MAAIzO,OAAJ,EAAa;EACX,QAAIqO,cAAc,WAAd,IAA6BrO,mBAAmBoF,SAApD,EAA+D;EAC7DqJ,sBAAgBzO,OAAhB;EACD,KAFD,MAEO,IAAIqO,cAAc,WAAd,IAA6BrO,mBAAmBsF,SAApD,EAA+D;EACpEmJ,sBAAgBzO,OAAhB;EACD,KAFM,MAEA,IAAIqO,cAAc,aAAd,IAA+BrO,mBAAmBkK,WAAtD,EAAmE;EACxEuE,sBAAgBzO,OAAhB;EACD,KAFM,MAEA;EACLU,cAAQ,IAAR,wCAAkD2N,SAAlD;EACD;EACF,GAVD,MAUO;EACL,QAAIlJ,IAAJ,EAAU;EACR;;;;;EAKAzE,cACE8N,aADF,gBAEcrJ,IAFd;EAMAzE,cACE8N,iBAAiBA,yBAAyBpJ,SAD5C,gBAEcD,IAFd;EAKA,UAAIqJ,iBAAiBA,yBAAyBpJ,SAA9C,EAAyD;EACvD;;;;EAIA,YAAI,CAACoJ,cAActH,GAAd,CAAkB/B,IAAlB,CAAL,EAA8B;EAC5BqJ,wBAAcE,UAAd,CACEvJ,IADF,EAEEiJ,wBAAwBC,SAAxB,EAAmC7J,OAAnC,EAA4C2F,SAA5C,CAFF;EAID,SALD;EAQAsE,wBAAgBD,cAActH,GAAd,CAAkB/B,IAAlB,CAAhB;EACD;EACF,KAhCD,MAgCO;EACL,UAAIqJ,yBAAyBlJ,SAA7B,EAAwC;EACtC;;;;EAIA,YAAMqJ,gBACJtC,UAAUzM,SAAV,GAAsByM,KAAtB,GAA8BmC,cAAcnJ,QAAd,CAAuB5D,MADvD;EAEA+M,sBAAcI,MAAd,CACED,aADF,EAEEP,wBAAwBC,SAAxB,EAAmC7J,OAAnC,EAA4C2F,SAA5C,CAFF;EAIAsE,wBAAgBD,cAAcjJ,EAAd,CAAiBoJ,aAAjB,CAAhB;EACD,OAZD,MAYO;EACL;EACA,YAAIN,cAAc,WAAd,IAA6BA,cAAc,WAA/C,EAA4D;EAC1DI,0BAAgBL,wBAAwBC,SAAxB,EAAmC7J,OAAnC,EAA4C2F,SAA5C,CAAhB;EACD;EACF;EACF;EACF;EACD;EACA,MAAIsE,iBAAiB9H,IAArB,EAA2B;EACzB8H,kBAAc9H,IAAd,GAAqBA,IAArB;EACD;EACD,SAAO8H,aAAP;EACD,CAzED;;MCTMI;;;EACJ,sBAAYzN,KAAZ,EAAmBmN,OAAnB,EAA4B;EAAA;;EAAA,uHACpBnN,KADoB,EACbmN,OADa;;EAE1B,UAAKvO,OAAL,GAAesO,iBAAiBlN,KAAjB,EAAwBmN,OAAxB,EAAiC,WAAjC,CAAf;EAF0B;EAG3B;;;;wCACiB;EAChB,aAAO;EACLC,uBAAe,KAAKxO;EADf,OAAP;EAGD;;;+BACQ;EAAA,mBAC8B,KAAKoB,KADnC;EAAA,UACCkM,MADD,UACCA,MADD;EAAA,UACSE,QADT,UACSA,QADT;EAAA,UACmBD,MADnB,UACmBA,MADnB;;EAEP,UAAMuB,aAAa;EACjB9O,iBAAS,KAAKA,OADG;EAEjBsN,sBAFiB;EAGjBC,gBAAQA,UAAUC,QAAV,IAAsB;EAHb,OAAnB;EAKA,aAAOE,MAAMqB,aAAN,CAAoB/B,KAApB,EAA2B8B,UAA3B,CAAP;EACD;;;IAlBsBpB,MAAMC;;EAqB/BkB,WAAWG,iBAAX,GAA+B;EAC7BR,iBAAeV,UAAUE,SAAV,CAAoB,CACjCF,UAAUG,UAAV,CAAqB3I,SAArB,CADiC,EAEjCwI,UAAUG,UAAV,CAAqB7I,SAArB,CAFiC,CAApB;EADc,CAA/B;EAMAyJ,WAAWI,YAAX,GAA0B;EACxBT,iBAAeV,UAAUE,SAAV,CAAoB,CACjCF,UAAUG,UAAV,CAAqB3I,SAArB,CADiC,EAEjCwI,UAAUG,UAAV,CAAqB7I,SAArB,CAFiC,CAApB;EADS,CAA1B;;EAOAyJ,WAAWjB,YAAX,GAA0B;EACxBN,UAAQ;EADgB,CAA1B;;EAIAuB,WAAWhB,SAAX,GAAuB;EACrBP,UAAQQ,UAAUC,IADG;EAErBR,UAAQO,UAAUK,IAFG;EAGrBhJ,QAAM2I,UAAUoB,MAHK;EAIrB7C,SAAOyB,UAAUqB,MAJI;EAKrBnP,WAAS8N,UAAUG,UAAV,CAAqB7I,SAArB,CALY;EAMrBZ,WAASsJ,UAAUsB,KAAV,CAAgB;EACvBnN,gBAAY6L,UAAUE,SAAV,CAAoB,CAC9BF,UAAUK,IADoB,EAE9BL,UAAUuB,OAAV,CAAkBvB,UAAUK,IAA5B,CAF8B,CAApB,CADW;EAKvB3H,qBAAiBsH,UAAUE,SAAV,CAAoB,CACnCF,UAAUK,IADyB,EAEnCL,UAAUuB,OAAV,CAAkBvB,UAAUK,IAA5B,CAFmC,CAApB,CALM;EASvB5N,cAAUuN,UAAUwB,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,CAAhB;EATa,GAAhB,CANY;EAiBrB9G,UAAQsF,UAAUE,SAAV,CAAoB,CAC1BF,UAAUG,UAAV,CAAqB3I,SAArB,CAD0B,EAE1BwI,UAAUG,UAAV,CAAqB7I,SAArB,CAF0B,CAApB,CAjBa;EAqBrBuB,QAAMmH,UAAUyB;EArBK,CAAvB;;MCvCqBC;;;EACnB,wBAAYpO,KAAZ,EAAmBmN,OAAnB,EAA4B;EAAA;;EAAA,2HACpBnN,KADoB,EACbmN,OADa;;EAE1B,UAAKvO,OAAL,GAAesO,iBAAiBlN,KAAjB,EAAwBmN,OAAxB,EAAiC,aAAjC,CAAf;EAF0B;EAG3B;;;;gDACyBrB,WAAW;EAAA,UAC3B/H,IAD2B,GAClB+H,SADkB,CAC3B/H,IAD2B;;EAEnC,UAAI,KAAK/D,KAAL,CAAW+D,IAAX,KAAoBA,IAAxB,EAA8B;EAC5B,aAAKnF,OAAL,GAAesO,iBAAiBpB,SAAjB,EAA4B,KAAKqB,OAAjC,EAA0C,aAA1C,CAAf;EACD;EACF;;;+BACQ;EAAA,mBAC8B,KAAKnN,KADnC;EAAA,UACCkM,MADD,UACCA,MADD;EAAA,UACSE,QADT,UACSA,QADT;EAAA,UACmBD,MADnB,UACmBA,MADnB;;EAEP,UAAMuB,aAAa;EACjB9O,iBAAS,KAAKA,OADG;EAEjBsN,sBAFiB;EAGjBC,gBAAQA,UAAUC,QAAV,IAAsB;EAHb,OAAnB;EAKA,aAAOE,MAAMqB,aAAN,CAAoB/B,KAApB,EAA2B8B,UAA3B,CAAP;EACD;;;IAnBuCpB,MAAMC;;;EAsBhD6B,aAAa5B,YAAb,GAA4B;EAC1BN,UAAQ;EADkB,CAA5B;EAGAkC,aAAa3B,SAAb,GAAyB;EACvBP,UAAQQ,UAAUC,IADK;EAEvBR,UAAQO,UAAUK,IAFK;EAGvBhJ,QAAM2I,UAAUoB,MAHO;EAIvB7C,SAAOyB,UAAUqB,MAJM;EAKvBnP,WAAS8N,UAAUG,UAAV,CAAqB/D,WAArB,CALc;EAMvBC,aAAW2D,UAAUE,SAAV,CAAoB,CAC7BF,UAAUsB,KAAV,CAAgB;EACdnS,WAAO6Q,UAAU2B,GADH;EAEdnR,cAAUwP,UAAUC;EAFN,GAAhB,CAD6B,EAK7BD,UAAU2B,GALmB,CAApB,CANY;EAavBjL,WAASsJ,UAAUsB,KAAV,CAAgB;EACvBnN,gBAAY6L,UAAUE,SAAV,CAAoB,CAC9BF,UAAUK,IADoB,EAE9BL,UAAUuB,OAAV,CAAkBvB,UAAUK,IAA5B,CAF8B,CAApB,CADW;EAKvB3H,qBAAiBsH,UAAUE,SAAV,CAAoB,CACnCF,UAAUK,IADyB,EAEnCL,UAAUuB,OAAV,CAAkBvB,UAAUK,IAA5B,CAFmC,CAApB,CALM;EASvB5N,cAAUuN,UAAUwB,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,CAAhB;EATa,GAAhB,CAbc;EAwBvB9G,UAAQsF,UAAUE,SAAV,CAAoB,CAC1BF,UAAUG,UAAV,CAAqB3I,SAArB,CAD0B,EAE1BwI,UAAUG,UAAV,CAAqB7I,SAArB,CAF0B,CAApB,CAxBe;EA4BvBuB,QAAMmH,UAAUyB;EA5BO,CAAzB;EA8BAC,aAAaP,YAAb,GAA4B;EAC1BT,iBAAeV,UAAUE,SAAV,CAAoB,CACjCF,UAAUG,UAAV,CAAqB3I,SAArB,CADiC,EAEjCwI,UAAUG,UAAV,CAAqB7I,SAArB,CAFiC,CAApB;EADW,CAA5B;;MCtDMsK;;;EACJ,sBAAYtO,KAAZ,EAAmBmN,OAAnB,EAA4B;EAAA;;EAAA,uHACpBnN,KADoB,EACbmN,OADa;;EAE1B,UAAKvO,OAAL,GAAesO,iBAAiBlN,KAAjB,EAAwBmN,OAAxB,EAAiC,WAAjC,CAAf;EAF0B;EAG3B;;;;wCACiB;EAChB,aAAO;EACLC,uBAAe,KAAKxO;EADf,OAAP;EAGD;;;+BACQ;EAAA,mBAC8B,KAAKoB,KADnC;EAAA,UACCkM,MADD,UACCA,MADD;EAAA,UACSE,QADT,UACSA,QADT;EAAA,UACmBD,MADnB,UACmBA,MADnB;;EAEP,UAAMuB,aAAa;EACjB9O,iBAAS,KAAKA,OADG;EAEjBsN,sBAFiB;EAGjBC,gBAAQA,UAAUC,QAAV,IAAsB;EAHb,OAAnB;EAKA,aAAOE,MAAMqB,aAAN,CAAoB/B,KAApB,EAA2B8B,UAA3B,CAAP;EACD;;;IAlBsBpB,MAAMC;;EAoB/B+B,WAAWV,iBAAX,GAA+B;EAC7BR,iBAAeV,UAAUE,SAAV,CAAoB,CACjCF,UAAUG,UAAV,CAAqB3I,SAArB,CADiC,EAEjCwI,UAAUG,UAAV,CAAqB7I,SAArB,CAFiC,CAApB;EADc,CAA/B;EAMAsK,WAAWT,YAAX,GAA0B;EACxBT,iBAAeV,UAAUE,SAAV,CAAoB,CACjCF,UAAUG,UAAV,CAAqB3I,SAArB,CADiC,EAEjCwI,UAAUG,UAAV,CAAqB7I,SAArB,CAFiC,CAApB;EADS,CAA1B;EAMAsK,WAAW9B,YAAX,GAA0B;EACxBN,UAAQ;EADgB,CAA1B;;EAIAoC,WAAW7B,SAAX,GAAuB;EACrBP,UAAQQ,UAAUC,IADG;EAErBR,UAAQO,UAAUK,IAFG;EAGrBhJ,QAAM2I,UAAUoB,MAHK;EAIrB7C,SAAOyB,UAAUqB,MAJI;EAKrBnP,WAAS8N,UAAUG,UAAV,CAAqB3I,SAArB,CALY;EAMrBd,WAASsJ,UAAUsB,KAAV,CAAgB;EACvBnN,gBAAY6L,UAAUE,SAAV,CAAoB,CAC9BF,UAAUK,IADoB,EAE9BL,UAAUuB,OAAV,CAAkBvB,UAAUK,IAA5B,CAF8B,CAApB,CADW;EAKvB3H,qBAAiBsH,UAAUE,SAAV,CAAoB,CACnCF,UAAUK,IADyB,EAEnCL,UAAUuB,OAAV,CAAkBvB,UAAUK,IAA5B,CAFmC,CAApB,CALM;EASvB5N,cAAUuN,UAAUwB,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,CAAhB;EATa,GAAhB,CANY;EAiBrB9G,UAAQsF,UAAUE,SAAV,CAAoB,CAC1BF,UAAUG,UAAV,CAAqB3I,SAArB,CAD0B,EAE1BwI,UAAUG,UAAV,CAAqB7I,SAArB,CAF0B,CAApB,CAjBa;EAqBrBuB,QAAMmH,UAAUyB;EArBK,CAAvB;;EChCA,IAAMI,sBAAsB,SAA5B;;MAEqBC;;;EACnB,yBAAYxO,KAAZ,EAAmB;EAAA;;EAEjB;EAFiB,6HACXA,KADW;;EAGjB,UAAKyO,IAAL,GAAY,IAAZ;EAHiB;EAIlB;;;;0CACmB;EAClB,WAAKzO,KAAL,CAAW0O,OAAX,CAAmB,KAAKD,IAAxB;EACD;;;2CACoB;EACnB,WAAKzO,KAAL,CAAW0O,OAAX,CAAmB,KAAKD,IAAxB;EACD;;;4CACqB3C,WAAW;EAC/B;EACA,UAAIA,UAAU6C,WAAV,KAA0B,KAAK3O,KAAL,CAAW2O,WAAzC,EAAsD;EACpD,eAAO,IAAP;EACD;EACD,aAAO,KAAP;EACD;;;6CACsB;EAAA,UACbC,SADa,GACC,KAAK5O,KADN,CACb4O,SADa;;EAErBA;EACD;EACD;;;;sCACkC;EAAA,UAApB1L,IAAoB,uEAAb,WAAa;EAAA,UACxByL,WADwB,GACR,KAAK3O,KADG,CACxB2O,WADwB;;EAEhC,WAAKF,IAAL,GAAYvB,iBAAiByB,WAAjB,EAA8B,EAA9B,EAAkCzL,IAAlC,CAAZ;EACD;EACD;;;;iCACW2L,aAAa3P,KAAkB;EAAA;;EAAA,UAAb6E,IAAa,uEAAN,IAAM;;EACxC;EACA,UAAM+K,kBAAkB/O,sBAAsB8O,WAAtB,CAAxB;EACA;EACAC,sBAAgB5P,GAAhB,GAAsBA,GAAtB;EACA,UAAI6E,IAAJ,EAAU;EACR+K,wBAAgB/K,IAAhB,GAAuBA,IAAvB;EACD;EACD;EACA,UACGA,QAAQA,KAAKgL,UAAL,CAAgBR,mBAAhB,CAAT,IACC,OAAOM,YAAY5D,KAAnB,KAA6B,QAA7B,IACC4D,YAAY5D,KAAZ,CAAkB8D,UAAlB,CAA6BR,mBAA7B,CAHJ,EAIE;EACA;EACA,YAAIM,YAAYG,QAAZ,KAAyB,KAA7B,EAAoC;EAClC,iBAAO1C,MAAMqB,aAAN,CACL/B,KADK,EAEL7M,OAAO4B,MAAP,CAAc,EAAd,EAAkB,EAAE/B,SAAS,KAAK6P,IAAhB,EAAlB,EAA0CK,eAA1C,CAFK,CAAP;EAID;EACD,eAAOA,gBAAgB3C,MAAhB,EAAP;EACD;;EAED,UAAI0C,YAAY5K,QAAhB,EAA0B;EACxB,YAAI4K,YAAY5K,QAAZ,YAAgCJ,KAApC,EAA2C;EACzC;EACA,cAAI,CAAC,KAAK4K,IAAV,EAAgB;EACd,iBAAKQ,aAAL,CAAmB,WAAnB;EACAH,4BAAgBlQ,OAAhB,GAA0B,KAAK6P,IAA/B;EACD;EACD,iBAAOnC,MAAMqB,aAAN,CACLW,UADK,EAELvP,OAAO4B,MAAP,CAAc,EAAd,EAAkBmO,eAAlB,EAAmC;EACjC3C,oBAAQ;EAAA,qBACN0C,YAAY5K,QAAZ,CAAqBnD,GAArB,CAAyB,UAACb,MAAD,EAASgL,KAAT;EAAA,uBACvB,OAAKiE,UAAL,CAAgBjP,MAAhB,EAA2Bf,GAA3B,SAAkC+L,KAAlC,CADuB;EAAA,eAAzB,CADM;EAAA;EADyB,WAAnC,CAFK,CAAP;EASD,SAfD,MAeO,IAAI4D,YAAY5K,QAAZ,YAAgClF,MAApC,EAA4C;EACjD;EACA,cAAI,CAAC,KAAK0P,IAAV,EAAgB;EACd,iBAAKQ,aAAL;EACAH,4BAAgBlQ,OAAhB,GAA0B,KAAK6P,IAA/B;EACD;EACD,iBAAOnC,MAAMqB,aAAN,CACLF,UADK,EAEL1O,OAAO4B,MAAP,CAAc,EAAd,EAAkBmO,eAAlB,EAAmC;EACjC3C,oBAAQ;EAAA,qBACNpN,OAAOC,IAAP,CAAY6P,YAAY5K,QAAxB,EAAkCnD,GAAlC,CAAsC;EAAA,uBACpC,OAAKoO,UAAL,CAAgBL,YAAY5K,QAAZ,CAAqB/E,GAArB,CAAhB,EAA2CA,GAA3C,EAAgDA,GAAhD,CADoC;EAAA,eAAtC,CADM;EAAA;EADyB,WAAnC,CAFK,CAAP;EASD,SAfM,MAeA;EACLI,kBAAQ,KAAR;EACA,iBAAO,IAAP;EACD;EACF,OAnCD,MAmCO;EACL,eAAOgN,MAAMqB,aAAN,CAAoBS,YAApB,EAAkCU,eAAlC,CAAP;EACD;EACF;;;uCACgB;EACf;EACA,WAAKL,IAAL,GAAY,IAAZ;EAFe,UAGPE,WAHO,GAGS,KAAK3O,KAHd,CAGP2O,WAHO;;EAIf,UAAIA,YAAY1K,QAAhB,EAA0B;EACxB,YAAMkL,SAAS,KAAKD,UAAL,CAAgBP,WAAhB,EAA6BjP,YAAY,SAAZ,CAA7B,CAAf;EACA,eAAOyP,MAAP;EACD,OAHD,MAGO;EACL;EACA7P,gBAAQ,KAAR;EACA,eAAO,IAAP;EACD;EACF;;;+BACQ;EAAA,UACCqP,WADD,GACiB,KAAK3O,KADtB,CACC2O,WADD;;EAEP,UAAIA,WAAJ,EAAiB;EACf,eAAO,KAAKS,cAAL,EAAP;EACD;EACD,aAAO,IAAP;EACD;;;IA/GwC9C,MAAMC;;;EAkHjDiC,cAAc/B,SAAd,GAA0B;EACxBkC,eAAajC,UAAUsB,KAAV,CAAgB;EAC3B/J,cAAUyI,UAAUE,SAAV,CAAoB,CAACF,UAAUyB,MAAX,EAAmBzB,UAAU2C,KAA7B,CAApB,EACPvC,UAFwB;EAG3BZ,YAAQQ,UAAUC,IAHS;EAI3BR,YAAQO,UAAUK,IAJS;EAK3BhJ,UAAM2I,UAAUoB,MALW;EAM3B7C,WAAOyB,UAAUqB,MANU;EAO3BnP,aAAS8N,UAAUE,SAAV,CAAoB,CAC3BF,UAAUG,UAAV,CAAqB3I,SAArB,CAD2B,EAE3BwI,UAAUG,UAAV,CAAqB7I,SAArB,CAF2B,CAApB,CAPkB;EAW3BZ,aAASsJ,UAAUsB,KAAV,CAAgB;EACvBnN,kBAAY6L,UAAUE,SAAV,CAAoB,CAC9BF,UAAUK,IADoB,EAE9BL,UAAUuB,OAAV,CAAkBvB,UAAUK,IAA5B,CAF8B,CAApB,CADW;EAKvB3H,uBAAiBsH,UAAUE,SAAV,CAAoB,CACnCF,UAAUK,IADyB,EAEnCL,UAAUuB,OAAV,CAAkBvB,UAAUK,IAA5B,CAFmC,CAApB,CALM;EASvB5N,gBAAUuN,UAAUwB,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,CAAhB;EATa,KAAhB,CAXkB;EAsB3B9G,YAAQsF,UAAUE,SAAV,CAAoB,CAC1BF,UAAUG,UAAV,CAAqB3I,SAArB,CAD0B,EAE1BwI,UAAUG,UAAV,CAAqB7I,SAArB,CAF0B,CAApB,CAtBmB;EA0B3BuB,UAAMmH,UAAUyB;EA1BW,GAAhB,EA2BVrB,UA5BqB;EA6BxB4B,WAAShC,UAAUK,IA7BK;EA8BxB6B,aAAWlC,UAAUK;EA9BG,CAA1B;EAgCAyB,cAAchC,YAAd,GAA6B;EAC3BkC,WAAS;EAAA,WAAM,IAAN;EAAA,GADkB;EAE3BE,aAAW;EAAA,WAAM,IAAN;EAAA;EAFgB,CAA7B;;EC1JA;;;EAGA,SAASU,iBAAT,CAA2B1Q,OAA3B,EAAoC;EAClC,MAAMS,eAAe,EAArB;EACAN,SAAOC,IAAP,CAAYjC,YAAZ,EAA0B1B,OAA1B,CAAkC,eAAO;EACvC,QAAM4D,kBAAkBL,QAAQ7B,aAAamC,GAAb,CAAR,CAAxB;EACAG,iBAAaH,GAAb,IAAoBD,eAApB;EACD,GAHD;EAIA,MAAIL,mBAAmBkK,WAAvB,EAAoC;EAClCzJ,iBAAa,SAAb,IAA0B,UAACX,SAAD,EAAY7C,KAAZ;EAAA,aACxB8C,WAAWD,SAAX,EAAsB7C,KAAtB,EAA6B+C,OAA7B,CADwB;EAAA,KAA1B;EAED;EACD,SAAOS,YAAP;EACD;EACD;;;;EAIA,SAASkQ,iBAAT,CAA2B3Q,OAA3B,EAAoCmF,IAApC,EAA0C;EACxC,MAAIyL,aAAa,EAAjB;EACAA,aAAWzL,IAAX,IAAmBuL,kBAAkB1Q,OAAlB,CAAnB;EACA,MAAIA,mBAAmBoF,SAAnB,IAAgCpF,QAAQqF,QAA5C,EAAsD;EACpDlF,WAAOC,IAAP,CAAYJ,QAAQqF,QAApB,EAA8B5I,OAA9B,CAAsC,4BAAoB;EACxDmU,iBAAWzL,IAAX,IAAmBhF,OAAO4B,MAAP,CACjB6O,WAAWzL,IAAX,CADiB,EAEjBwL,kBAAkB3Q,QAAQqF,QAAR,CAAiBwL,gBAAjB,CAAlB,EAAsDA,gBAAtD,CAFiB,CAAnB;EAID,KALD;EAMD,GAPD,MAOO,IAAI7Q,mBAAmBsF,SAAnB,IAAgCtF,QAAQqF,QAA5C,EAAsD;EAC3DuL,eAAWzL,IAAX,EAAiB,UAAjB,IAA+BnF,QAAQqF,QAAvC;EACD;EACD,SAAOuL,UAAP;EACD;EACD,SAASE,QAAT,CAAkBC,YAAlB,EAAgC;EAC9B,MAAIH,aAAa,EAAjB;EACA,MAAIG,YAAJ,EAAkB;EAChB5Q,WAAOC,IAAP,CAAY2Q,YAAZ,EAA0BtU,OAA1B,CAAkC,uBAAe;EAC/C,UAAMuD,UAAU+Q,aAAa5F,WAAb,CAAhB;EACA,UAAInL,OAAJ,EAAa;EACX4Q,qBAAazQ,OAAO4B,MAAP,CACX6O,UADW,EAEXD,kBAAkB3Q,OAAlB,EAA2BmL,WAA3B,CAFW,CAAb;EAID;EACF,KARD;EASD;EACD,SAAOyF,UAAP;EACD;EACD;;;;;;EAMA,SAASI,YAAT,CAAsBC,cAAtB,EAAsCC,SAAtC,EAAiD;EAC/C,MAAMH,eAAeG,UAAU7L,QAA/B;EACA,MAAMuL,aAAaE,SAASC,YAAT,CAAnB;EACAD,WAASC,YAAT;;EAH+C,MAIzCI,YAJyC;EAAA;;EAK7C,0BAAY/P,KAAZ,EAAmB;EAAA;;EAAA,6HACXA,KADW;;EAEjB,YAAKgQ,KAAL,GAAa;EACXR;EADW,OAAb;EAGA,YAAKS,eAAL,GAAuB,MAAKA,eAAL,CAAqBrK,IAArB,OAAvB;EALiB;EAMlB;;EAX4C;EAAA;EAAA,2CAYxB;EAAA;;EACnB;EACAkK,kBAAUrJ,YAAV,CAAuBrK,SAAvB,CAAiC,YAAM;EACrC,iBAAK6T,eAAL;EACD,SAFD;EAGD;EAjB4C;EAAA;EAAA,6CAkBtB;EACrB;EACA,YAAIH,UAAUrJ,YAAV,CAAuB7L,SAA3B,EAAsC;EACpCkV,oBAAUrJ,YAAV,CAAuB7L,SAAvB,CAAiCS,OAAjC,CAAyC,oBAAY;EACnDyU,sBAAUrJ,YAAV,CAAuB8B,WAAvB,CAAmC0D,QAAnC;EACD,WAFD;EAGD;EACF;EAzB4C;EAAA;EAAA,wCA0B3B;EAChB,aAAKiE,QAAL,CAAc;EACZV,sBAAYE,SAASC,YAAT;EADA,SAAd;EAGD;EA9B4C;EAAA;EAAA,+BA+BpC;EACP,YAAM3P,QAAQjB,OAAO4B,MAAP,CAAc,EAAd,EAAkB,KAAKX,KAAvB,EAA8B,KAAKgQ,KAAL,CAAWR,UAAzC,CAAd;EACA,eAAOlD,MAAMqB,aAAN,CAAoBkC,cAApB,EAAoC7P,KAApC,CAAP;EACD;EAlC4C;EAAA;EAAA,IAIpBsM,MAAMC,SAJc;;EAoC/C,SAAOwD,YAAP;EACD;;;;;;;;;;;;;;;;;;;;;;"}